   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 18, 4
  11              		.file	"led.c"
  21              	.Ltext0:
  22              		.file 1 "../led.c"
 1882              		.align	2
 1883              		.global	leds_on
 1885              	leds_on:
 1886              	.LFB0:
   1:../led.c      **** /*********************************************************************************************
   2:../led.c      **** * Fichero:		led.c
   3:../led.c      **** * Autor1:	Sergio García Esteban	755844
   4:../led.c      **** * Autor2:	Irene Fumanal Lacoma	758325
   5:../led.c      **** * Descrip:		Funciones de control de los LED de la placa
   6:../led.c      **** * Version:
   7:../led.c      **** *********************************************************************************************/
   8:../led.c      **** 
   9:../led.c      **** /*--- ficheros de cabecera ---*/
  10:../led.c      **** #include "led.h"
  11:../led.c      **** #include "44b.h"
  12:../led.c      **** #include "44blib.h"
  13:../led.c      **** 
  14:../led.c      **** /*--- variables globales del modulo ---*/
  15:../led.c      **** static int led_state = 0;		/* estado del LED */
  16:../led.c      **** 
  17:../led.c      **** /*--- codigo de las funciones ---*/
  18:../led.c      **** void leds_on()
  19:../led.c      **** {
 1887              		.loc 1 19 0
 1888              		.cfi_startproc
 1889              		@ Function supports interworking.
 1890              		@ args = 0, pretend = 0, frame = 0
 1891              		@ frame_needed = 0, uses_anonymous_args = 0
 1892              		@ link register save eliminated.
 1893              	.LVL0:
 1894              	.LBB4:
 1895              	.LBB5:
  20:../led.c      **** 	Led_Display(0x3);
  21:../led.c      **** }
  22:../led.c      **** 
  23:../led.c      **** void leds_off()
  24:../led.c      **** {
  25:../led.c      **** 	Led_Display(0x0);
  26:../led.c      **** }
  27:../led.c      **** 
  28:../led.c      **** void led1_on()
  29:../led.c      **** {
  30:../led.c      **** 	led_state = led_state | 0x1;
  31:../led.c      **** 	Led_Display(led_state);
  32:../led.c      **** }
  33:../led.c      **** 
  34:../led.c      **** void led1_off()
  35:../led.c      **** {
  36:../led.c      **** 	led_state = led_state & 0xfe;
  37:../led.c      **** 	Led_Display(led_state);
  38:../led.c      **** }
  39:../led.c      **** 
  40:../led.c      **** void led2_on()
  41:../led.c      **** {
  42:../led.c      **** 	led_state = led_state | 0x2;
  43:../led.c      **** 	Led_Display(led_state);
  44:../led.c      **** }
  45:../led.c      **** 
  46:../led.c      **** void led2_off()
  47:../led.c      **** {
  48:../led.c      **** 	led_state = led_state & 0xfd;
  49:../led.c      **** 	Led_Display(led_state);
  50:../led.c      **** }
  51:../led.c      **** 
  52:../led.c      **** void leds_switch()
  53:../led.c      **** {
  54:../led.c      **** 	led_state ^= 0x03;
  55:../led.c      **** 	Led_Display(led_state);
  56:../led.c      **** 
  57:../led.c      **** }
  58:../led.c      **** 
  59:../led.c      **** void Led_Display(int LedStatus)
  60:../led.c      **** {
  61:../led.c      **** 	led_state = LedStatus;
  62:../led.c      **** 
  63:../led.c      **** 	if ((LedStatus & 0x01) == 0x01)
  64:../led.c      **** 		rPDATB = rPDATB & 0x5ff; /* poner a 0 el bit 9 del puerto B */
 1896              		.loc 1 64 0
 1897 0000 2C309FE5 		ldr	r3, .L2
 1898 0004 2CC09FE5 		ldr	ip, .L2+4
 1899 0008 0C1093E5 		ldr	r1, [r3, #12]
 1900 000c 0C0001E0 		and	r0, r1, ip
 1901 0010 0C0083E5 		str	r0, [r3, #12]
  65:../led.c      **** 	else
  66:../led.c      **** 		rPDATB = rPDATB | 0x200; /* poner a 1 el bit 9 del puerto B */
  67:../led.c      **** 
  68:../led.c      **** 	if ((LedStatus & 0x02) == 0x02)
  69:../led.c      **** 		rPDATB = rPDATB & 0x3ff; /* poner a 0 el bit 10 del puerto B */
 1902              		.loc 1 69 0
 1903 0014 0C2093E5 		ldr	r2, [r3, #12]
  61:../led.c      **** 	led_state = LedStatus;
 1904              		.loc 1 61 0
 1905 0018 1C109FE5 		ldr	r1, .L2+8
 1906              		.loc 1 69 0
 1907 001c 02CBA0E1 		mov	ip, r2, asl #22
 1908 0020 2C2BA0E1 		mov	r2, ip, lsr #22
  61:../led.c      **** 	led_state = LedStatus;
 1909              		.loc 1 61 0
 1910 0024 0300A0E3 		mov	r0, #3
 1911 0028 000081E5 		str	r0, [r1, #0]
 1912              		.loc 1 69 0
 1913 002c 0C2083E5 		str	r2, [r3, #12]
 1914              	.LBE5:
 1915              	.LBE4:
  21:../led.c      **** }
 1916              		.loc 1 21 0
 1917 0030 1EFF2FE1 		bx	lr
 1918              	.L3:
 1919              		.align	2
 1920              	.L2:
 1921 0034 0000D201 		.word	30539776
 1922 0038 FF050000 		.word	1535
 1923 003c 00000000 		.word	.LANCHOR0
 1924              		.cfi_endproc
 1925              	.LFE0:
 1927              		.align	2
 1928              		.global	leds_off
 1930              	leds_off:
 1931              	.LFB1:
  24:../led.c      **** {
 1932              		.loc 1 24 0
 1933              		.cfi_startproc
 1934              		@ Function supports interworking.
 1935              		@ args = 0, pretend = 0, frame = 0
 1936              		@ frame_needed = 0, uses_anonymous_args = 0
 1937              		@ link register save eliminated.
 1938              	.LVL1:
 1939              	.LBB8:
 1940              	.LBB9:
  66:../led.c      **** 		rPDATB = rPDATB | 0x200; /* poner a 1 el bit 9 del puerto B */
 1941              		.loc 1 66 0
 1942 0040 24309FE5 		ldr	r3, .L5
 1943 0044 0C0093E5 		ldr	r0, [r3, #12]
 1944 0048 022C80E3 		orr	r2, r0, #512
 1945 004c 0C2083E5 		str	r2, [r3, #12]
  70:../led.c      **** 	else
  71:../led.c      **** 		rPDATB = rPDATB | 0x400; /* poner a 1 el bit 10 del puerto B */
 1946              		.loc 1 71 0
 1947 0050 0CC093E5 		ldr	ip, [r3, #12]
  61:../led.c      **** 	led_state = LedStatus;
 1948              		.loc 1 61 0
 1949 0054 14109FE5 		ldr	r1, .L5+4
 1950              		.loc 1 71 0
 1951 0058 012B8CE3 		orr	r2, ip, #1024
  61:../led.c      **** 	led_state = LedStatus;
 1952              		.loc 1 61 0
 1953 005c 0000A0E3 		mov	r0, #0
 1954 0060 000081E5 		str	r0, [r1, #0]
 1955              		.loc 1 71 0
 1956 0064 0C2083E5 		str	r2, [r3, #12]
 1957              	.LBE9:
 1958              	.LBE8:
  26:../led.c      **** }
 1959              		.loc 1 26 0
 1960 0068 1EFF2FE1 		bx	lr
 1961              	.L6:
 1962              		.align	2
 1963              	.L5:
 1964 006c 0000D201 		.word	30539776
 1965 0070 00000000 		.word	.LANCHOR0
 1966              		.cfi_endproc
 1967              	.LFE1:
 1969              		.align	2
 1970              		.global	led1_on
 1972              	led1_on:
 1973              	.LFB2:
  29:../led.c      **** {
 1974              		.loc 1 29 0
 1975              		.cfi_startproc
 1976              		@ Function supports interworking.
 1977              		@ args = 0, pretend = 0, frame = 0
 1978              		@ frame_needed = 0, uses_anonymous_args = 0
 1979              		@ link register save eliminated.
 1980              	.LBB12:
 1981              	.LBB15:
  64:../led.c      **** 		rPDATB = rPDATB & 0x5ff; /* poner a 0 el bit 9 del puerto B */
 1982              		.loc 1 64 0
 1983 0074 38309FE5 		ldr	r3, .L10
 1984              	.LBE15:
 1985              	.LBE12:
  30:../led.c      **** 	led_state = led_state | 0x1;
 1986              		.loc 1 30 0
 1987 0078 38109FE5 		ldr	r1, .L10+4
 1988              	.LBB18:
 1989              	.LBB14:
  64:../led.c      **** 		rPDATB = rPDATB & 0x5ff; /* poner a 0 el bit 9 del puerto B */
 1990              		.loc 1 64 0
 1991 007c 0CC093E5 		ldr	ip, [r3, #12]
 1992              	.LBE14:
 1993              	.LBE18:
  30:../led.c      **** 	led_state = led_state | 0x1;
 1994              		.loc 1 30 0
 1995 0080 000091E5 		ldr	r0, [r1, #0]
 1996              	.LBB19:
 1997              	.LBB16:
  64:../led.c      **** 		rPDATB = rPDATB & 0x5ff; /* poner a 0 el bit 9 del puerto B */
 1998              		.loc 1 64 0
 1999 0084 30209FE5 		ldr	r2, .L10+8
 2000              	.LBE16:
 2001              	.LBE19:
  30:../led.c      **** 	led_state = led_state | 0x1;
 2002              		.loc 1 30 0
 2003 0088 010080E3 		orr	r0, r0, #1
 2004              	.LBB20:
 2005              	.LBB13:
  64:../led.c      **** 		rPDATB = rPDATB & 0x5ff; /* poner a 0 el bit 9 del puerto B */
 2006              		.loc 1 64 0
 2007 008c 02C00CE0 		and	ip, ip, r2
 2008              	.LBE13:
 2009              	.LBE20:
  30:../led.c      **** 	led_state = led_state | 0x1;
 2010              		.loc 1 30 0
 2011 0090 000081E5 		str	r0, [r1, #0]
 2012              	.LBB21:
 2013              	.LBB17:
  64:../led.c      **** 		rPDATB = rPDATB & 0x5ff; /* poner a 0 el bit 9 del puerto B */
 2014              		.loc 1 64 0
 2015 0094 0CC083E5 		str	ip, [r3, #12]
  69:../led.c      **** 		rPDATB = rPDATB & 0x3ff; /* poner a 0 el bit 10 del puerto B */
 2016              		.loc 1 69 0
 2017 0098 0C2093E5 		ldr	r2, [r3, #12]
  68:../led.c      **** 	if ((LedStatus & 0x02) == 0x02)
 2018              		.loc 1 68 0
 2019 009c 020010E3 		tst	r0, #2
  69:../led.c      **** 		rPDATB = rPDATB & 0x3ff; /* poner a 0 el bit 10 del puerto B */
 2020              		.loc 1 69 0
 2021 00a0 022BA011 		movne	r2, r2, asl #22
 2022 00a4 222BA011 		movne	r2, r2, lsr #22
 2023              		.loc 1 71 0
 2024 00a8 012B8203 		orreq	r2, r2, #1024
 2025 00ac 0C2083E5 		str	r2, [r3, #12]
 2026 00b0 1EFF2FE1 		bx	lr
 2027              	.L11:
 2028              		.align	2
 2029              	.L10:
 2030 00b4 0000D201 		.word	30539776
 2031 00b8 00000000 		.word	.LANCHOR0
 2032 00bc FF050000 		.word	1535
 2033              	.LBE17:
 2034              	.LBE21:
 2035              		.cfi_endproc
 2036              	.LFE2:
 2038              		.align	2
 2039              		.global	led1_off
 2041              	led1_off:
 2042              	.LFB3:
  35:../led.c      **** {
 2043              		.loc 1 35 0
 2044              		.cfi_startproc
 2045              		@ Function supports interworking.
 2046              		@ args = 0, pretend = 0, frame = 0
 2047              		@ frame_needed = 0, uses_anonymous_args = 0
 2048              		@ link register save eliminated.
 2049              	.LBB24:
 2050              	.LBB26:
  66:../led.c      **** 		rPDATB = rPDATB | 0x200; /* poner a 1 el bit 9 del puerto B */
 2051              		.loc 1 66 0
 2052 00c0 34309FE5 		ldr	r3, .L15
 2053              	.LBE26:
 2054              	.LBE24:
  36:../led.c      **** 	led_state = led_state & 0xfe;
 2055              		.loc 1 36 0
 2056 00c4 34209FE5 		ldr	r2, .L15+4
 2057              	.LBB29:
 2058              	.LBB27:
  66:../led.c      **** 		rPDATB = rPDATB | 0x200; /* poner a 1 el bit 9 del puerto B */
 2059              		.loc 1 66 0
 2060 00c8 0C0093E5 		ldr	r0, [r3, #12]
 2061              	.LBE27:
 2062              	.LBE29:
  36:../led.c      **** 	led_state = led_state & 0xfe;
 2063              		.loc 1 36 0
 2064 00cc 001092E5 		ldr	r1, [r2, #0]
 2065              	.LBB30:
 2066              	.LBB25:
  66:../led.c      **** 		rPDATB = rPDATB | 0x200; /* poner a 1 el bit 9 del puerto B */
 2067              		.loc 1 66 0
 2068 00d0 020C80E3 		orr	r0, r0, #512
 2069              	.LBE25:
 2070              	.LBE30:
  36:../led.c      **** 	led_state = led_state & 0xfe;
 2071              		.loc 1 36 0
 2072 00d4 FEC001E2 		and	ip, r1, #254
 2073 00d8 00C082E5 		str	ip, [r2, #0]
 2074              	.LBB31:
 2075              	.LBB28:
  66:../led.c      **** 		rPDATB = rPDATB | 0x200; /* poner a 1 el bit 9 del puerto B */
 2076              		.loc 1 66 0
 2077 00dc 0C0083E5 		str	r0, [r3, #12]
  69:../led.c      **** 		rPDATB = rPDATB & 0x3ff; /* poner a 0 el bit 10 del puerto B */
 2078              		.loc 1 69 0
 2079 00e0 0C2093E5 		ldr	r2, [r3, #12]
  68:../led.c      **** 	if ((LedStatus & 0x02) == 0x02)
 2080              		.loc 1 68 0
 2081 00e4 020011E3 		tst	r1, #2
  69:../led.c      **** 		rPDATB = rPDATB & 0x3ff; /* poner a 0 el bit 10 del puerto B */
 2082              		.loc 1 69 0
 2083 00e8 022BA011 		movne	r2, r2, asl #22
 2084 00ec 222BA011 		movne	r2, r2, lsr #22
 2085              		.loc 1 71 0
 2086 00f0 012B8203 		orreq	r2, r2, #1024
 2087 00f4 0C2083E5 		str	r2, [r3, #12]
 2088 00f8 1EFF2FE1 		bx	lr
 2089              	.L16:
 2090              		.align	2
 2091              	.L15:
 2092 00fc 0000D201 		.word	30539776
 2093 0100 00000000 		.word	.LANCHOR0
 2094              	.LBE28:
 2095              	.LBE31:
 2096              		.cfi_endproc
 2097              	.LFE3:
 2099              		.align	2
 2100              		.global	led2_on
 2102              	led2_on:
 2103              	.LFB4:
  41:../led.c      **** {
 2104              		.loc 1 41 0
 2105              		.cfi_startproc
 2106              		@ Function supports interworking.
 2107              		@ args = 0, pretend = 0, frame = 0
 2108              		@ frame_needed = 0, uses_anonymous_args = 0
 2109              		@ link register save eliminated.
  42:../led.c      **** 	led_state = led_state | 0x2;
 2110              		.loc 1 42 0
 2111 0104 48309FE5 		ldr	r3, .L20
 2112 0108 002093E5 		ldr	r2, [r3, #0]
 2113 010c 02C082E3 		orr	ip, r2, #2
 2114              	.LBB34:
 2115              	.LBB35:
  63:../led.c      **** 	if ((LedStatus & 0x01) == 0x01)
 2116              		.loc 1 63 0
 2117 0110 01001CE3 		tst	ip, #1
 2118              	.LBE35:
 2119              	.LBE34:
  42:../led.c      **** 	led_state = led_state | 0x2;
 2120              		.loc 1 42 0
 2121 0114 00C083E5 		str	ip, [r3, #0]
 2122              	.LBB37:
 2123              	.LBB36:
  66:../led.c      **** 		rPDATB = rPDATB | 0x200; /* poner a 1 el bit 9 del puerto B */
 2124              		.loc 1 66 0
 2125 0118 38309F05 		ldreq	r3, .L20+4
  64:../led.c      **** 		rPDATB = rPDATB & 0x5ff; /* poner a 0 el bit 9 del puerto B */
 2126              		.loc 1 64 0
 2127 011c 34C09F15 		ldrne	ip, .L20+4
  66:../led.c      **** 		rPDATB = rPDATB | 0x200; /* poner a 1 el bit 9 del puerto B */
 2128              		.loc 1 66 0
 2129 0120 0CC09305 		ldreq	ip, [r3, #12]
  64:../led.c      **** 		rPDATB = rPDATB & 0x5ff; /* poner a 0 el bit 9 del puerto B */
 2130              		.loc 1 64 0
 2131 0124 0C109C15 		ldrne	r1, [ip, #12]
 2132 0128 2C309F15 		ldrne	r3, .L20+8
  66:../led.c      **** 		rPDATB = rPDATB | 0x200; /* poner a 1 el bit 9 del puerto B */
 2133              		.loc 1 66 0
 2134 012c 02CC8C03 		orreq	ip, ip, #512
  64:../led.c      **** 		rPDATB = rPDATB & 0x5ff; /* poner a 0 el bit 9 del puerto B */
 2135              		.loc 1 64 0
 2136 0130 03300110 		andne	r3, r1, r3
 2137 0134 0C308C15 		strne	r3, [ip, #12]
  66:../led.c      **** 		rPDATB = rPDATB | 0x200; /* poner a 1 el bit 9 del puerto B */
 2138              		.loc 1 66 0
 2139 0138 0CC08305 		streq	ip, [r3, #12]
  69:../led.c      **** 		rPDATB = rPDATB & 0x3ff; /* poner a 0 el bit 10 del puerto B */
 2140              		.loc 1 69 0
 2141 013c 14309FE5 		ldr	r3, .L20+4
 2142 0140 0C1093E5 		ldr	r1, [r3, #12]
 2143 0144 010BA0E1 		mov	r0, r1, asl #22
 2144 0148 202BA0E1 		mov	r2, r0, lsr #22
 2145 014c 0C2083E5 		str	r2, [r3, #12]
 2146              	.LBE36:
 2147              	.LBE37:
  44:../led.c      **** }
 2148              		.loc 1 44 0
 2149 0150 1EFF2FE1 		bx	lr
 2150              	.L21:
 2151              		.align	2
 2152              	.L20:
 2153 0154 00000000 		.word	.LANCHOR0
 2154 0158 0000D201 		.word	30539776
 2155 015c FF050000 		.word	1535
 2156              		.cfi_endproc
 2157              	.LFE4:
 2159              		.align	2
 2160              		.global	led2_off
 2162              	led2_off:
 2163              	.LFB5:
  47:../led.c      **** {
 2164              		.loc 1 47 0
 2165              		.cfi_startproc
 2166              		@ Function supports interworking.
 2167              		@ args = 0, pretend = 0, frame = 0
 2168              		@ frame_needed = 0, uses_anonymous_args = 0
 2169              		@ link register save eliminated.
  48:../led.c      **** 	led_state = led_state & 0xfd;
 2170              		.loc 1 48 0
 2171 0160 44209FE5 		ldr	r2, .L25
 2172 0164 00C092E5 		ldr	ip, [r2, #0]
 2173              	.LBB40:
 2174              	.LBB41:
  63:../led.c      **** 	if ((LedStatus & 0x01) == 0x01)
 2175              		.loc 1 63 0
 2176 0168 01001CE3 		tst	ip, #1
 2177              	.LBE41:
 2178              	.LBE40:
  48:../led.c      **** 	led_state = led_state & 0xfd;
 2179              		.loc 1 48 0
 2180 016c FD100CE2 		and	r1, ip, #253
 2181 0170 001082E5 		str	r1, [r2, #0]
 2182              	.LBB43:
 2183              	.LBB42:
  64:../led.c      **** 		rPDATB = rPDATB & 0x5ff; /* poner a 0 el bit 9 del puerto B */
 2184              		.loc 1 64 0
 2185 0174 34C09F15 		ldrne	ip, .L25+4
  66:../led.c      **** 		rPDATB = rPDATB | 0x200; /* poner a 1 el bit 9 del puerto B */
 2186              		.loc 1 66 0
 2187 0178 30209F05 		ldreq	r2, .L25+4
  64:../led.c      **** 		rPDATB = rPDATB & 0x5ff; /* poner a 0 el bit 9 del puerto B */
 2188              		.loc 1 64 0
 2189 017c 0C109C15 		ldrne	r1, [ip, #12]
  66:../led.c      **** 		rPDATB = rPDATB | 0x200; /* poner a 1 el bit 9 del puerto B */
 2190              		.loc 1 66 0
 2191 0180 0CC09205 		ldreq	ip, [r2, #12]
  64:../led.c      **** 		rPDATB = rPDATB & 0x5ff; /* poner a 0 el bit 9 del puerto B */
 2192              		.loc 1 64 0
 2193 0184 28209F15 		ldrne	r2, .L25+8
  66:../led.c      **** 		rPDATB = rPDATB | 0x200; /* poner a 1 el bit 9 del puerto B */
 2194              		.loc 1 66 0
 2195 0188 02CC8C03 		orreq	ip, ip, #512
  64:../led.c      **** 		rPDATB = rPDATB & 0x5ff; /* poner a 0 el bit 9 del puerto B */
 2196              		.loc 1 64 0
 2197 018c 02200110 		andne	r2, r1, r2
 2198 0190 0C208C15 		strne	r2, [ip, #12]
  66:../led.c      **** 		rPDATB = rPDATB | 0x200; /* poner a 1 el bit 9 del puerto B */
 2199              		.loc 1 66 0
 2200 0194 0CC08205 		streq	ip, [r2, #12]
 2201              		.loc 1 71 0
 2202 0198 10309FE5 		ldr	r3, .L25+4
 2203 019c 0C0093E5 		ldr	r0, [r3, #12]
 2204 01a0 012B80E3 		orr	r2, r0, #1024
 2205 01a4 0C2083E5 		str	r2, [r3, #12]
 2206              	.LBE42:
 2207              	.LBE43:
  50:../led.c      **** }
 2208              		.loc 1 50 0
 2209 01a8 1EFF2FE1 		bx	lr
 2210              	.L26:
 2211              		.align	2
 2212              	.L25:
 2213 01ac 00000000 		.word	.LANCHOR0
 2214 01b0 0000D201 		.word	30539776
 2215 01b4 FF050000 		.word	1535
 2216              		.cfi_endproc
 2217              	.LFE5:
 2219              		.align	2
 2220              		.global	leds_switch
 2222              	leds_switch:
 2223              	.LFB6:
  53:../led.c      **** {
 2224              		.loc 1 53 0
 2225              		.cfi_startproc
 2226              		@ Function supports interworking.
 2227              		@ args = 0, pretend = 0, frame = 0
 2228              		@ frame_needed = 0, uses_anonymous_args = 0
 2229              		@ link register save eliminated.
  54:../led.c      **** 	led_state ^= 0x03;
 2230              		.loc 1 54 0
 2231 01b8 50209FE5 		ldr	r2, .L32
 2232 01bc 003092E5 		ldr	r3, [r2, #0]
 2233 01c0 03C023E2 		eor	ip, r3, #3
 2234              	.LBB46:
 2235              	.LBB47:
  63:../led.c      **** 	if ((LedStatus & 0x01) == 0x01)
 2236              		.loc 1 63 0
 2237 01c4 01001CE3 		tst	ip, #1
 2238              	.LBE47:
 2239              	.LBE46:
  54:../led.c      **** 	led_state ^= 0x03;
 2240              		.loc 1 54 0
 2241 01c8 00C082E5 		str	ip, [r2, #0]
 2242              	.LVL2:
 2243              	.LBB49:
 2244              	.LBB48:
  64:../led.c      **** 		rPDATB = rPDATB & 0x5ff; /* poner a 0 el bit 9 del puerto B */
 2245              		.loc 1 64 0
 2246 01cc 40109F15 		ldrne	r1, .L32+4
  66:../led.c      **** 		rPDATB = rPDATB | 0x200; /* poner a 1 el bit 9 del puerto B */
 2247              		.loc 1 66 0
 2248 01d0 3C209F05 		ldreq	r2, .L32+4
  64:../led.c      **** 		rPDATB = rPDATB & 0x5ff; /* poner a 0 el bit 9 del puerto B */
 2249              		.loc 1 64 0
 2250 01d4 0C009115 		ldrne	r0, [r1, #12]
  66:../led.c      **** 		rPDATB = rPDATB | 0x200; /* poner a 1 el bit 9 del puerto B */
 2251              		.loc 1 66 0
 2252 01d8 0C109205 		ldreq	r1, [r2, #12]
  64:../led.c      **** 		rPDATB = rPDATB & 0x5ff; /* poner a 0 el bit 9 del puerto B */
 2253              		.loc 1 64 0
 2254 01dc 34209F15 		ldrne	r2, .L32+8
  66:../led.c      **** 		rPDATB = rPDATB | 0x200; /* poner a 1 el bit 9 del puerto B */
 2255              		.loc 1 66 0
 2256 01e0 021C8103 		orreq	r1, r1, #512
  64:../led.c      **** 		rPDATB = rPDATB & 0x5ff; /* poner a 0 el bit 9 del puerto B */
 2257              		.loc 1 64 0
 2258 01e4 02200010 		andne	r2, r0, r2
 2259 01e8 0C208115 		strne	r2, [r1, #12]
  66:../led.c      **** 		rPDATB = rPDATB | 0x200; /* poner a 1 el bit 9 del puerto B */
 2260              		.loc 1 66 0
 2261 01ec 0C108205 		streq	r1, [r2, #12]
  69:../led.c      **** 		rPDATB = rPDATB & 0x3ff; /* poner a 0 el bit 10 del puerto B */
 2262              		.loc 1 69 0
 2263 01f0 1C309FE5 		ldr	r3, .L32+4
 2264 01f4 0C2093E5 		ldr	r2, [r3, #12]
  68:../led.c      **** 	if ((LedStatus & 0x02) == 0x02)
 2265              		.loc 1 68 0
 2266 01f8 02001CE3 		tst	ip, #2
  69:../led.c      **** 		rPDATB = rPDATB & 0x3ff; /* poner a 0 el bit 10 del puerto B */
 2267              		.loc 1 69 0
 2268 01fc 022BA011 		movne	r2, r2, asl #22
 2269 0200 222BA011 		movne	r2, r2, lsr #22
 2270              		.loc 1 71 0
 2271 0204 012B8203 		orreq	r2, r2, #1024
 2272 0208 0C2083E5 		str	r2, [r3, #12]
 2273 020c 1EFF2FE1 		bx	lr
 2274              	.L33:
 2275              		.align	2
 2276              	.L32:
 2277 0210 00000000 		.word	.LANCHOR0
 2278 0214 0000D201 		.word	30539776
 2279 0218 FF050000 		.word	1535
 2280              	.LBE48:
 2281              	.LBE49:
 2282              		.cfi_endproc
 2283              	.LFE6:
 2285              		.align	2
 2286              		.global	Led_Display
 2288              	Led_Display:
 2289              	.LFB7:
  60:../led.c      **** {
 2290              		.loc 1 60 0
 2291              		.cfi_startproc
 2292              		@ Function supports interworking.
 2293              		@ args = 0, pretend = 0, frame = 0
 2294              		@ frame_needed = 0, uses_anonymous_args = 0
 2295              		@ link register save eliminated.
 2296              	.LVL3:
  61:../led.c      **** 	led_state = LedStatus;
 2297              		.loc 1 61 0
 2298 021c 48C09FE5 		ldr	ip, .L39
  63:../led.c      **** 	if ((LedStatus & 0x01) == 0x01)
 2299              		.loc 1 63 0
 2300 0220 010010E3 		tst	r0, #1
  61:../led.c      **** 	led_state = LedStatus;
 2301              		.loc 1 61 0
 2302 0224 00008CE5 		str	r0, [ip, #0]
  64:../led.c      **** 		rPDATB = rPDATB & 0x5ff; /* poner a 0 el bit 9 del puerto B */
 2303              		.loc 1 64 0
 2304 0228 40209F15 		ldrne	r2, .L39+4
  66:../led.c      **** 		rPDATB = rPDATB | 0x200; /* poner a 1 el bit 9 del puerto B */
 2305              		.loc 1 66 0
 2306 022c 3CC09F05 		ldreq	ip, .L39+4
  64:../led.c      **** 		rPDATB = rPDATB & 0x5ff; /* poner a 0 el bit 9 del puerto B */
 2307              		.loc 1 64 0
 2308 0230 0C109215 		ldrne	r1, [r2, #12]
  66:../led.c      **** 		rPDATB = rPDATB | 0x200; /* poner a 1 el bit 9 del puerto B */
 2309              		.loc 1 66 0
 2310 0234 0C209C05 		ldreq	r2, [ip, #12]
  64:../led.c      **** 		rPDATB = rPDATB & 0x5ff; /* poner a 0 el bit 9 del puerto B */
 2311              		.loc 1 64 0
 2312 0238 34C09F15 		ldrne	ip, .L39+8
  66:../led.c      **** 		rPDATB = rPDATB | 0x200; /* poner a 1 el bit 9 del puerto B */
 2313              		.loc 1 66 0
 2314 023c 022C8203 		orreq	r2, r2, #512
  64:../led.c      **** 		rPDATB = rPDATB & 0x5ff; /* poner a 0 el bit 9 del puerto B */
 2315              		.loc 1 64 0
 2316 0240 0CC00110 		andne	ip, r1, ip
 2317 0244 0CC08215 		strne	ip, [r2, #12]
  66:../led.c      **** 		rPDATB = rPDATB | 0x200; /* poner a 1 el bit 9 del puerto B */
 2318              		.loc 1 66 0
 2319 0248 0C208C05 		streq	r2, [ip, #12]
  69:../led.c      **** 		rPDATB = rPDATB & 0x3ff; /* poner a 0 el bit 10 del puerto B */
 2320              		.loc 1 69 0
 2321 024c 1C309FE5 		ldr	r3, .L39+4
 2322 0250 0C2093E5 		ldr	r2, [r3, #12]
  68:../led.c      **** 	if ((LedStatus & 0x02) == 0x02)
 2323              		.loc 1 68 0
 2324 0254 020010E3 		tst	r0, #2
  69:../led.c      **** 		rPDATB = rPDATB & 0x3ff; /* poner a 0 el bit 10 del puerto B */
 2325              		.loc 1 69 0
 2326 0258 022BA011 		movne	r2, r2, asl #22
 2327 025c 222BA011 		movne	r2, r2, lsr #22
 2328              		.loc 1 71 0
 2329 0260 012B8203 		orreq	r2, r2, #1024
 2330 0264 0C2083E5 		str	r2, [r3, #12]
 2331 0268 1EFF2FE1 		bx	lr
 2332              	.L40:
 2333              		.align	2
 2334              	.L39:
 2335 026c 00000000 		.word	.LANCHOR0
 2336 0270 0000D201 		.word	30539776
 2337 0274 FF050000 		.word	1535
 2338              		.cfi_endproc
 2339              	.LFE7:
 2341              		.bss
 2342              		.align	2
 2343              		.set	.LANCHOR0,. + 0
 2346              	led_state:
 2347 0000 00000000 		.space	4
 2348              		.text
 2349              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 led.c
C:\Users\sergi\AppData\Local\Temp\ccPvJZLH.s:1882   .text:00000000 $a
C:\Users\sergi\AppData\Local\Temp\ccPvJZLH.s:1885   .text:00000000 leds_on
C:\Users\sergi\AppData\Local\Temp\ccPvJZLH.s:1921   .text:00000034 $d
C:\Users\sergi\AppData\Local\Temp\ccPvJZLH.s:1927   .text:00000040 $a
C:\Users\sergi\AppData\Local\Temp\ccPvJZLH.s:1930   .text:00000040 leds_off
C:\Users\sergi\AppData\Local\Temp\ccPvJZLH.s:1964   .text:0000006c $d
C:\Users\sergi\AppData\Local\Temp\ccPvJZLH.s:1969   .text:00000074 $a
C:\Users\sergi\AppData\Local\Temp\ccPvJZLH.s:1972   .text:00000074 led1_on
C:\Users\sergi\AppData\Local\Temp\ccPvJZLH.s:2030   .text:000000b4 $d
C:\Users\sergi\AppData\Local\Temp\ccPvJZLH.s:2038   .text:000000c0 $a
C:\Users\sergi\AppData\Local\Temp\ccPvJZLH.s:2041   .text:000000c0 led1_off
C:\Users\sergi\AppData\Local\Temp\ccPvJZLH.s:2092   .text:000000fc $d
C:\Users\sergi\AppData\Local\Temp\ccPvJZLH.s:2099   .text:00000104 $a
C:\Users\sergi\AppData\Local\Temp\ccPvJZLH.s:2102   .text:00000104 led2_on
C:\Users\sergi\AppData\Local\Temp\ccPvJZLH.s:2153   .text:00000154 $d
C:\Users\sergi\AppData\Local\Temp\ccPvJZLH.s:2159   .text:00000160 $a
C:\Users\sergi\AppData\Local\Temp\ccPvJZLH.s:2162   .text:00000160 led2_off
C:\Users\sergi\AppData\Local\Temp\ccPvJZLH.s:2213   .text:000001ac $d
C:\Users\sergi\AppData\Local\Temp\ccPvJZLH.s:2219   .text:000001b8 $a
C:\Users\sergi\AppData\Local\Temp\ccPvJZLH.s:2222   .text:000001b8 leds_switch
C:\Users\sergi\AppData\Local\Temp\ccPvJZLH.s:2277   .text:00000210 $d
C:\Users\sergi\AppData\Local\Temp\ccPvJZLH.s:2285   .text:0000021c $a
C:\Users\sergi\AppData\Local\Temp\ccPvJZLH.s:2288   .text:0000021c Led_Display
C:\Users\sergi\AppData\Local\Temp\ccPvJZLH.s:2335   .text:0000026c $d
C:\Users\sergi\AppData\Local\Temp\ccPvJZLH.s:2342   .bss:00000000 $d
C:\Users\sergi\AppData\Local\Temp\ccPvJZLH.s:2346   .bss:00000000 led_state
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
