   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 18, 4
  11              		.file	"pruebas_patron_volteo.c"
  21              	.Ltext0:
  22              		.file 1 "../pruebas_patron_volteo.c"
 989              		.align	2
 990              		.global	patron_volteo_test
 992              	patron_volteo_test:
 993              	.LFB0:
   1:../pruebas_patron_volteo.c **** /*********************************************************************************************
   2:../pruebas_patron_volteo.c **** * Fichero:		pruebas_patron_volteo.c
   3:../pruebas_patron_volteo.c **** * Autor1:	Sergio García Esteban	755844
   4:../pruebas_patron_volteo.c **** * Autor2:	Irene Fumanal Lacoma	758325
   5:../pruebas_patron_volteo.c **** * Descrip:		Funciones de debugg de las funciones de patron_volteo.
   6:../pruebas_patron_volteo.c **** * Version:
   7:../pruebas_patron_volteo.c **** *********************************************************************************************/
   8:../pruebas_patron_volteo.c **** 
   9:../pruebas_patron_volteo.c **** /*--- ficheros de cabecera ---*/
  10:../pruebas_patron_volteo.c **** #include "pruebas_patron_volteo.h"
  11:../pruebas_patron_volteo.c **** #include "reversi8_2019.h"
  12:../pruebas_patron_volteo.c **** #include "timer2.h"
  13:../pruebas_patron_volteo.c **** 
  14:../pruebas_patron_volteo.c **** extern int patron_volteo_arm_arm(char tablero[][8], int *longitud,char f, char c, char SF, char SC,
  15:../pruebas_patron_volteo.c **** extern int patron_volteo_arm_c(char tablero[][8], int *longitud,char f, char c, char SF, char SC, c
  16:../pruebas_patron_volteo.c **** 
  17:../pruebas_patron_volteo.c **** 
  18:../pruebas_patron_volteo.c **** /*--- variables globales del módulo ---*/
  19:../pruebas_patron_volteo.c **** static const char vSF[DIM] = {-1,-1, 0, 1, 1, 1, 0,-1};
  20:../pruebas_patron_volteo.c **** static const char vSC[DIM] = { 0, 1, 1, 1, 0,-1,-1,-1};
  21:../pruebas_patron_volteo.c **** 
  22:../pruebas_patron_volteo.c **** 
  23:../pruebas_patron_volteo.c **** /*
  24:../pruebas_patron_volteo.c ****  * Compara los resultados de las 3 funciones patron_volteo y tambien las longitudes.
  25:../pruebas_patron_volteo.c ****  * Si no son iguales entra en bucle infinito.
  26:../pruebas_patron_volteo.c ****  */
  27:../pruebas_patron_volteo.c **** int patron_volteo_test(char tablero[][DIM], int *longitud, char FA, char CA, char SF, char SC, char
 994              		.loc 1 27 0
 995              		.cfi_startproc
 996              		@ Function supports interworking.
 997              		@ args = 12, pretend = 0, frame = 24
 998              		@ frame_needed = 1, uses_anonymous_args = 0
 999              	.LVL0:
 1000 0000 0DC0A0E1 		mov	ip, sp
 1001              	.LCFI0:
 1002              		.cfi_def_cfa_register 12
 1003 0004 F0DF2DE9 		stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}
 1004 0008 04B04CE2 		sub	fp, ip, #4
 1005              		.cfi_offset 14, -8
 1006              		.cfi_offset 13, -12
 1007              		.cfi_offset 11, -16
 1008              		.cfi_offset 10, -20
 1009              		.cfi_offset 9, -24
 1010              		.cfi_offset 8, -28
 1011              		.cfi_offset 7, -32
 1012              		.cfi_offset 6, -36
 1013              		.cfi_offset 5, -40
 1014              		.cfi_offset 4, -44
 1015              	.LCFI1:
 1016              		.cfi_def_cfa 11, 4
 1017 000c 2CD04DE2 		sub	sp, sp, #44
  28:../pruebas_patron_volteo.c **** 	int sol_1,sol_2,sol_3;		//soluciones: PATRON_ENCONTRADO, NO_HAY_PATRON
  29:../pruebas_patron_volteo.c **** 	int longitud_1=*longitud;	//valor longitud con el que trabajará la primera función
 1018              		.loc 1 29 0
 1019 0010 00E091E5 		ldr	lr, [r1, #0]
 1020              	.LVL1:
  27:../pruebas_patron_volteo.c **** int patron_volteo_test(char tablero[][DIM], int *longitud, char FA, char CA, char SF, char SC, char
 1021              		.loc 1 27 0
 1022 0014 0450DBE5 		ldrb	r5, [fp, #4]	@ zero_extendqisi2
 1023 0018 0840DBE5 		ldrb	r4, [fp, #8]	@ zero_extendqisi2
 1024 001c 0C70DBE5 		ldrb	r7, [fp, #12]	@ zero_extendqisi2
  30:../pruebas_patron_volteo.c **** 	int longitud_2=*longitud;
  31:../pruebas_patron_volteo.c **** 	int longitud_3=*longitud;
  32:../pruebas_patron_volteo.c **** 	int *plong_1=&longitud_1;	//puntero longitud a pasar por parametro a la primera función
  33:../pruebas_patron_volteo.c **** 	int *plong_2=&longitud_2;
  34:../pruebas_patron_volteo.c **** 	int *plong_3=&longitud_3;
  35:../pruebas_patron_volteo.c **** 	sol_1=patron_volteo(tablero,plong_1,FA,CA,SF,SC,color);
 1025              		.loc 1 35 0
 1026 0020 30104BE2 		sub	r1, fp, #48
 1027              	.LVL2:
  27:../pruebas_patron_volteo.c **** int patron_volteo_test(char tablero[][DIM], int *longitud, char FA, char CA, char SF, char SC, char
 1028              		.loc 1 27 0
 1029 0024 0080A0E1 		mov	r8, r0
 1030 0028 02A0A0E1 		mov	sl, r2
 1031 002c 0390A0E1 		mov	r9, r3
  29:../pruebas_patron_volteo.c **** 	int longitud_1=*longitud;	//valor longitud con el que trabajará la primera función
 1032              		.loc 1 29 0
 1033 0030 30E00BE5 		str	lr, [fp, #-48]
 1034              	.LVL3:
  30:../pruebas_patron_volteo.c **** 	int longitud_2=*longitud;
 1035              		.loc 1 30 0
 1036 0034 34E00BE5 		str	lr, [fp, #-52]
 1037              	.LVL4:
  31:../pruebas_patron_volteo.c **** 	int longitud_3=*longitud;
 1038              		.loc 1 31 0
 1039 0038 38E00BE5 		str	lr, [fp, #-56]
 1040              	.LVL5:
 1041              		.loc 1 35 0
 1042 003c 00508DE5 		str	r5, [sp, #0]
 1043 0040 90008DE9 		stmib	sp, {r4, r7}	@ phole stm
 1044 0044 FEFFFFEB 		bl	patron_volteo
 1045              	.LVL6:
  36:../pruebas_patron_volteo.c **** 	sol_2=patron_volteo_arm_c(tablero,plong_2,FA,CA,SF,SC,color);
 1046              		.loc 1 36 0
 1047 0048 34104BE2 		sub	r1, fp, #52
  35:../pruebas_patron_volteo.c **** 	sol_1=patron_volteo(tablero,plong_1,FA,CA,SF,SC,color);
 1048              		.loc 1 35 0
 1049 004c 0060A0E1 		mov	r6, r0
 1050              	.LVL7:
 1051              		.loc 1 36 0
 1052 0050 0A20A0E1 		mov	r2, sl
 1053 0054 0930A0E1 		mov	r3, r9
 1054 0058 0800A0E1 		mov	r0, r8
 1055              	.LVL8:
 1056 005c 40600BE5 		str	r6, [fp, #-64]
 1057 0060 00508DE5 		str	r5, [sp, #0]
 1058 0064 90008DE9 		stmib	sp, {r4, r7}	@ phole stm
 1059 0068 FEFFFFEB 		bl	patron_volteo_arm_c
  37:../pruebas_patron_volteo.c **** 	sol_3=patron_volteo_arm_arm(tablero,plong_3,FA,CA,SF,SC,color);
 1060              		.loc 1 37 0
 1061 006c 38104BE2 		sub	r1, fp, #56
  36:../pruebas_patron_volteo.c **** 	sol_2=patron_volteo_arm_c(tablero,plong_2,FA,CA,SF,SC,color);
 1062              		.loc 1 36 0
 1063 0070 0060A0E1 		mov	r6, r0
 1064              	.LVL9:
 1065              		.loc 1 37 0
 1066 0074 0A20A0E1 		mov	r2, sl
 1067 0078 0800A0E1 		mov	r0, r8
 1068              	.LVL10:
 1069 007c 0930A0E1 		mov	r3, r9
 1070 0080 00508DE5 		str	r5, [sp, #0]
 1071 0084 90008DE9 		stmib	sp, {r4, r7}	@ phole stm
 1072 0088 FEFFFFEB 		bl	patron_volteo_arm_arm
 1073              	.LVL11:
  38:../pruebas_patron_volteo.c **** 
  39:../pruebas_patron_volteo.c **** 	//comprobamos si coinciden solucion y longitud de las 3
  40:../pruebas_patron_volteo.c **** 	if(sol_1!=sol_2||sol_1!=sol_3||longitud_1!=longitud_2||longitud_1!=longitud_3){
 1074              		.loc 1 40 0
 1075 008c 40C01BE5 		ldr	ip, [fp, #-64]
 1076 0090 06005CE1 		cmp	ip, r6
 1077 0094 00005C01 		cmpeq	ip, r0
 1078 0098 0000000A 		beq	.L6
 1079              	.L2:
 1080              	.L4:
 1081 009c FEFFFFEA 		b	.L4
 1082              	.L6:
 1083              		.loc 1 40 0 is_stmt 0 discriminator 1
 1084 00a0 34204BE2 		sub	r2, fp, #52
 1085 00a4 0C0092E8 		ldmia	r2, {r2, r3}	@ phole ldm
 1086 00a8 020053E1 		cmp	r3, r2
 1087 00ac FAFFFF1A 		bne	.L2
 1088 00b0 38101BE5 		ldr	r1, [fp, #-56]
 1089 00b4 010053E1 		cmp	r3, r1
 1090 00b8 F7FFFF1A 		bne	.L2
  41:../pruebas_patron_volteo.c **** 		while(1);
  42:../pruebas_patron_volteo.c **** 	}
  43:../pruebas_patron_volteo.c **** 	return sol_3;
  44:../pruebas_patron_volteo.c **** }
 1091              		.loc 1 44 0 is_stmt 1
 1092 00bc 28D04BE2 		sub	sp, fp, #40
 1093 00c0 F06F9DE8 		ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, lr}
 1094 00c4 1EFF2FE1 		bx	lr
 1095              		.cfi_endproc
 1096              	.LFE0:
 1098              		.align	2
 1099              		.global	pruebas_patron_volteo
 1101              	pruebas_patron_volteo:
 1102              	.LFB1:
  45:../pruebas_patron_volteo.c **** 
  46:../pruebas_patron_volteo.c **** /*
  47:../pruebas_patron_volteo.c ****  * Utiliza los tableros t_1,t_2 y t_3  para comprobar el funcionamiento
  48:../pruebas_patron_volteo.c ****  * utilizando patron_volteo_test().
  49:../pruebas_patron_volteo.c ****  */
  50:../pruebas_patron_volteo.c **** void pruebas_patron_volteo(){
 1103              		.loc 1 50 0
 1104              		.cfi_startproc
 1105              		@ Function supports interworking.
 1106              		@ args = 0, pretend = 0, frame = 16
 1107              		@ frame_needed = 1, uses_anonymous_args = 0
 1108              	.LVL12:
 1109 00c8 0DC0A0E1 		mov	ip, sp
 1110              	.LCFI2:
 1111              		.cfi_def_cfa_register 12
 1112 00cc F0DF2DE9 		stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}
 1113 00d0 04B04CE2 		sub	fp, ip, #4
 1114              		.cfi_offset 14, -8
 1115              		.cfi_offset 13, -12
 1116              		.cfi_offset 11, -16
 1117              		.cfi_offset 10, -20
 1118              		.cfi_offset 9, -24
 1119              		.cfi_offset 8, -28
 1120              		.cfi_offset 7, -32
 1121              		.cfi_offset 6, -36
 1122              		.cfi_offset 5, -40
 1123              		.cfi_offset 4, -44
 1124              	.LCFI3:
 1125              		.cfi_def_cfa 11, 4
 1126 00d4 24D04DE2 		sub	sp, sp, #36
  51:../pruebas_patron_volteo.c **** 	//Tablero prueba 1
  52:../pruebas_patron_volteo.c **** 	static char __attribute__ ((aligned (8))) t_1[DIM][DIM] = {
  53:../pruebas_patron_volteo.c **** 				{2,0,0,2,0,0,2,0},
  54:../pruebas_patron_volteo.c **** 			    {0,1,0,1,0,1,0,0},
  55:../pruebas_patron_volteo.c **** 			    {0,0,1,1,1,0,0,0},
  56:../pruebas_patron_volteo.c **** 			    {2,1,1,2,1,1,1,2},
  57:../pruebas_patron_volteo.c **** 			    {0,0,1,1,1,0,0,0},
  58:../pruebas_patron_volteo.c **** 			    {0,1,0,1,0,1,0,0},
  59:../pruebas_patron_volteo.c **** 			    {2,0,0,1,0,0,1,0},
  60:../pruebas_patron_volteo.c **** 			    {0,0,0,2,0,0,0,2}
  61:../pruebas_patron_volteo.c **** 	};
  62:../pruebas_patron_volteo.c **** 	//Tablero prueba 2
  63:../pruebas_patron_volteo.c **** 	static char __attribute__ ((aligned (8))) t_2[DIM][DIM] = {
  64:../pruebas_patron_volteo.c **** 				{2,0,0,1,0,0,0,0},
  65:../pruebas_patron_volteo.c **** 			    {0,0,0,1,0,2,0,0},
  66:../pruebas_patron_volteo.c **** 			    {0,0,1,1,1,0,0,0},
  67:../pruebas_patron_volteo.c **** 			    {2,1,0,2,1,0,1,2},
  68:../pruebas_patron_volteo.c **** 			    {0,0,0,0,2,0,0,0},
  69:../pruebas_patron_volteo.c **** 			    {0,2,0,0,0,1,0,0},
  70:../pruebas_patron_volteo.c **** 			    {0,0,0,0,0,0,2,0},
  71:../pruebas_patron_volteo.c **** 			    {0,0,0,0,0,0,0,0}
  72:../pruebas_patron_volteo.c **** 	};
  73:../pruebas_patron_volteo.c **** 	//Tablero prueba 3
  74:../pruebas_patron_volteo.c **** 	static char __attribute__ ((aligned (8))) t_3[DIM][DIM] = {
  75:../pruebas_patron_volteo.c **** 				{2,1,1,1,1,1,1,1},
  76:../pruebas_patron_volteo.c **** 			    {1,1,0,0,0,0,0,0},
  77:../pruebas_patron_volteo.c **** 			    {1,0,1,0,0,0,0,0},
  78:../pruebas_patron_volteo.c **** 			    {1,0,0,1,0,0,0,0},
  79:../pruebas_patron_volteo.c **** 			    {1,0,0,0,1,0,0,0},
  80:../pruebas_patron_volteo.c **** 			    {1,0,0,0,0,1,0,0},
  81:../pruebas_patron_volteo.c **** 			    {1,0,0,0,0,0,1,0},
  82:../pruebas_patron_volteo.c **** 			    {2,0,0,0,0,0,0,2}
  83:../pruebas_patron_volteo.c **** 	};
  84:../pruebas_patron_volteo.c **** 
  85:../pruebas_patron_volteo.c **** 	int i,lon;
  86:../pruebas_patron_volteo.c **** 	char SF,SC,f,c,color;
  87:../pruebas_patron_volteo.c **** 	f=3;
  88:../pruebas_patron_volteo.c **** 	c=3;
  89:../pruebas_patron_volteo.c **** 	color=2;
  90:../pruebas_patron_volteo.c **** 	for (i = 0; i < DIM; i++){
 1127              		.loc 1 90 0
 1128 00d8 0050A0E3 		mov	r5, #0
 1129              	.LBB8:
 1130              	.LBB9:
  29:../pruebas_patron_volteo.c **** 	int longitud_1=*longitud;	//valor longitud con el que trabajará la primera función
 1131              		.loc 1 29 0
 1132 00dc 0540A0E1 		mov	r4, r5
  35:../pruebas_patron_volteo.c **** 	sol_1=patron_volteo(tablero,plong_1,FA,CA,SF,SC,color);
 1133              		.loc 1 35 0
 1134 00e0 0270A0E3 		mov	r7, #2
 1135              	.LVL13:
 1136              	.L10:
 1137              	.LBE9:
 1138              	.LBE8:
  91:../pruebas_patron_volteo.c **** 		lon=0;
  92:../pruebas_patron_volteo.c **** 		SF = vSF[i];
 1139              		.loc 1 92 0 discriminator 2
 1140 00e4 14029FE5 		ldr	r0, .L26
  93:../pruebas_patron_volteo.c **** 		SC = vSC[i];
 1141              		.loc 1 93 0 discriminator 2
 1142 00e8 083080E2 		add	r3, r0, #8
  92:../pruebas_patron_volteo.c **** 		SF = vSF[i];
 1143              		.loc 1 92 0 discriminator 2
 1144 00ec 0580D0E7 		ldrb	r8, [r0, r5]	@ zero_extendqisi2
 1145              	.LVL14:
 1146              		.loc 1 93 0 discriminator 2
 1147 00f0 05A0D3E7 		ldrb	sl, [r3, r5]	@ zero_extendqisi2
 1148              	.LVL15:
 1149              	.LBB11:
 1150              	.LBB10:
  35:../pruebas_patron_volteo.c **** 	sol_1=patron_volteo(tablero,plong_1,FA,CA,SF,SC,color);
 1151              		.loc 1 35 0 discriminator 2
 1152 00f4 0320A0E3 		mov	r2, #3
 1153              	.LVL16:
 1154 00f8 0230A0E1 		mov	r3, r2
 1155 00fc 30104BE2 		sub	r1, fp, #48
 1156              	.LVL17:
 1157 0100 FC019FE5 		ldr	r0, .L26+4
  29:../pruebas_patron_volteo.c **** 	int longitud_1=*longitud;	//valor longitud con el que trabajará la primera función
 1158              		.loc 1 29 0 discriminator 2
 1159 0104 30400BE5 		str	r4, [fp, #-48]
  30:../pruebas_patron_volteo.c **** 	int longitud_2=*longitud;
 1160              		.loc 1 30 0 discriminator 2
 1161 0108 34400BE5 		str	r4, [fp, #-52]
  31:../pruebas_patron_volteo.c **** 	int longitud_3=*longitud;
 1162              		.loc 1 31 0 discriminator 2
 1163 010c 38400BE5 		str	r4, [fp, #-56]
 1164              	.LVL18:
  35:../pruebas_patron_volteo.c **** 	sol_1=patron_volteo(tablero,plong_1,FA,CA,SF,SC,color);
 1165              		.loc 1 35 0 discriminator 2
 1166 0110 00058DE8 		stmia	sp, {r8, sl}	@ phole stm
 1167 0114 08708DE5 		str	r7, [sp, #8]
 1168 0118 FEFFFFEB 		bl	patron_volteo
 1169              	.LVL19:
  36:../pruebas_patron_volteo.c **** 	sol_2=patron_volteo_arm_c(tablero,plong_2,FA,CA,SF,SC,color);
 1170              		.loc 1 36 0 discriminator 2
 1171 011c 0320A0E3 		mov	r2, #3
 1172 0120 0230A0E1 		mov	r3, r2
  35:../pruebas_patron_volteo.c **** 	sol_1=patron_volteo(tablero,plong_1,FA,CA,SF,SC,color);
 1173              		.loc 1 35 0 discriminator 2
 1174 0124 0090A0E1 		mov	r9, r0
 1175              	.LVL20:
  36:../pruebas_patron_volteo.c **** 	sol_2=patron_volteo_arm_c(tablero,plong_2,FA,CA,SF,SC,color);
 1176              		.loc 1 36 0 discriminator 2
 1177 0128 34104BE2 		sub	r1, fp, #52
 1178 012c D0019FE5 		ldr	r0, .L26+4
 1179              	.LVL21:
 1180 0130 00058DE8 		stmia	sp, {r8, sl}	@ phole stm
 1181 0134 08708DE5 		str	r7, [sp, #8]
 1182 0138 FEFFFFEB 		bl	patron_volteo_arm_c
  37:../pruebas_patron_volteo.c **** 	sol_3=patron_volteo_arm_arm(tablero,plong_3,FA,CA,SF,SC,color);
 1183              		.loc 1 37 0 discriminator 2
 1184 013c 0320A0E3 		mov	r2, #3
  36:../pruebas_patron_volteo.c **** 	sol_2=patron_volteo_arm_c(tablero,plong_2,FA,CA,SF,SC,color);
 1185              		.loc 1 36 0 discriminator 2
 1186 0140 0060A0E1 		mov	r6, r0
 1187              	.LVL22:
  37:../pruebas_patron_volteo.c **** 	sol_3=patron_volteo_arm_arm(tablero,plong_3,FA,CA,SF,SC,color);
 1188              		.loc 1 37 0 discriminator 2
 1189 0144 38104BE2 		sub	r1, fp, #56
 1190 0148 B4019FE5 		ldr	r0, .L26+4
 1191              	.LVL23:
 1192 014c 0230A0E1 		mov	r3, r2
 1193 0150 00058DE8 		stmia	sp, {r8, sl}	@ phole stm
 1194 0154 08708DE5 		str	r7, [sp, #8]
 1195 0158 FEFFFFEB 		bl	patron_volteo_arm_arm
 1196              	.LVL24:
  40:../pruebas_patron_volteo.c **** 	if(sol_1!=sol_2||sol_1!=sol_3||longitud_1!=longitud_2||longitud_1!=longitud_3){
 1197              		.loc 1 40 0 discriminator 2
 1198 015c 060059E1 		cmp	r9, r6
 1199 0160 00005901 		cmpeq	r9, r0
 1200 0164 0000000A 		beq	.L23
 1201              	.L8:
 1202              	.L20:
 1203 0168 FEFFFFEA 		b	.L20
 1204              	.L23:
  40:../pruebas_patron_volteo.c **** 	if(sol_1!=sol_2||sol_1!=sol_3||longitud_1!=longitud_2||longitud_1!=longitud_3){
 1205              		.loc 1 40 0 is_stmt 0
 1206 016c 34204BE2 		sub	r2, fp, #52
 1207 0170 0C0092E8 		ldmia	r2, {r2, r3}	@ phole ldm
 1208 0174 020053E1 		cmp	r3, r2
 1209 0178 FAFFFF1A 		bne	.L8
 1210 017c 38101BE5 		ldr	r1, [fp, #-56]
 1211 0180 010053E1 		cmp	r3, r1
 1212 0184 F7FFFF1A 		bne	.L8
 1213              	.LBE10:
 1214              	.LBE11:
  90:../pruebas_patron_volteo.c **** 	for (i = 0; i < DIM; i++){
 1215              		.loc 1 90 0 is_stmt 1
 1216 0188 015085E2 		add	r5, r5, #1
 1217              	.LVL25:
 1218 018c 080055E3 		cmp	r5, #8
 1219 0190 D3FFFF1A 		bne	.L10
 1220              	.LBB12:
 1221              	.LBB13:
  29:../pruebas_patron_volteo.c **** 	int longitud_1=*longitud;	//valor longitud con el que trabajará la primera función
 1222              		.loc 1 29 0 discriminator 2
 1223 0194 0450A0E1 		mov	r5, r4
 1224              	.LVL26:
 1225              	.L13:
 1226              	.LBE13:
 1227              	.LBE12:
  94:../pruebas_patron_volteo.c **** 		patron_volteo_test(t_1,&lon,f,c,SF,SC,color);
  95:../pruebas_patron_volteo.c **** 	}
  96:../pruebas_patron_volteo.c **** 	for (i = 0; i < DIM; i++){
  97:../pruebas_patron_volteo.c **** 		lon=0;
  98:../pruebas_patron_volteo.c **** 		SF = vSF[i];
 1228              		.loc 1 98 0 discriminator 2
 1229 0198 60E19FE5 		ldr	lr, .L26
  99:../pruebas_patron_volteo.c **** 		SC = vSC[i];
 1230              		.loc 1 99 0 discriminator 2
 1231 019c 08C08EE2 		add	ip, lr, #8
  98:../pruebas_patron_volteo.c **** 		SF = vSF[i];
 1232              		.loc 1 98 0 discriminator 2
 1233 01a0 0480DEE7 		ldrb	r8, [lr, r4]	@ zero_extendqisi2
 1234              	.LVL27:
 1235              		.loc 1 99 0 discriminator 2
 1236 01a4 04A0DCE7 		ldrb	sl, [ip, r4]	@ zero_extendqisi2
 1237              	.LVL28:
 1238              	.LBB15:
 1239              	.LBB14:
  35:../pruebas_patron_volteo.c **** 	sol_1=patron_volteo(tablero,plong_1,FA,CA,SF,SC,color);
 1240              		.loc 1 35 0 discriminator 2
 1241 01a8 0320A0E3 		mov	r2, #3
 1242              	.LVL29:
 1243 01ac 0230A0E1 		mov	r3, r2
 1244 01b0 38104BE2 		sub	r1, fp, #56
 1245 01b4 4C019FE5 		ldr	r0, .L26+8
 1246              	.LVL30:
  29:../pruebas_patron_volteo.c **** 	int longitud_1=*longitud;	//valor longitud con el que trabajará la primera función
 1247              		.loc 1 29 0 discriminator 2
 1248 01b8 38500BE5 		str	r5, [fp, #-56]
  30:../pruebas_patron_volteo.c **** 	int longitud_2=*longitud;
 1249              		.loc 1 30 0 discriminator 2
 1250 01bc 34500BE5 		str	r5, [fp, #-52]
  31:../pruebas_patron_volteo.c **** 	int longitud_3=*longitud;
 1251              		.loc 1 31 0 discriminator 2
 1252 01c0 30500BE5 		str	r5, [fp, #-48]
 1253              	.LVL31:
  35:../pruebas_patron_volteo.c **** 	sol_1=patron_volteo(tablero,plong_1,FA,CA,SF,SC,color);
 1254              		.loc 1 35 0 discriminator 2
 1255 01c4 00058DE8 		stmia	sp, {r8, sl}	@ phole stm
 1256 01c8 08708DE5 		str	r7, [sp, #8]
 1257 01cc FEFFFFEB 		bl	patron_volteo
  36:../pruebas_patron_volteo.c **** 	sol_2=patron_volteo_arm_c(tablero,plong_2,FA,CA,SF,SC,color);
 1258              		.loc 1 36 0 discriminator 2
 1259 01d0 0320A0E3 		mov	r2, #3
 1260 01d4 0230A0E1 		mov	r3, r2
  35:../pruebas_patron_volteo.c **** 	sol_1=patron_volteo(tablero,plong_1,FA,CA,SF,SC,color);
 1261              		.loc 1 35 0 discriminator 2
 1262 01d8 0090A0E1 		mov	r9, r0
 1263              	.LVL32:
  36:../pruebas_patron_volteo.c **** 	sol_2=patron_volteo_arm_c(tablero,plong_2,FA,CA,SF,SC,color);
 1264              		.loc 1 36 0 discriminator 2
 1265 01dc 34104BE2 		sub	r1, fp, #52
 1266 01e0 20019FE5 		ldr	r0, .L26+8
 1267              	.LVL33:
 1268 01e4 00058DE8 		stmia	sp, {r8, sl}	@ phole stm
 1269 01e8 08708DE5 		str	r7, [sp, #8]
 1270 01ec FEFFFFEB 		bl	patron_volteo_arm_c
  37:../pruebas_patron_volteo.c **** 	sol_3=patron_volteo_arm_arm(tablero,plong_3,FA,CA,SF,SC,color);
 1271              		.loc 1 37 0 discriminator 2
 1272 01f0 0320A0E3 		mov	r2, #3
  36:../pruebas_patron_volteo.c **** 	sol_2=patron_volteo_arm_c(tablero,plong_2,FA,CA,SF,SC,color);
 1273              		.loc 1 36 0 discriminator 2
 1274 01f4 0060A0E1 		mov	r6, r0
 1275              	.LVL34:
  37:../pruebas_patron_volteo.c **** 	sol_3=patron_volteo_arm_arm(tablero,plong_3,FA,CA,SF,SC,color);
 1276              		.loc 1 37 0 discriminator 2
 1277 01f8 30104BE2 		sub	r1, fp, #48
 1278              	.LVL35:
 1279 01fc 04019FE5 		ldr	r0, .L26+8
 1280              	.LVL36:
 1281 0200 0230A0E1 		mov	r3, r2
 1282 0204 00058DE8 		stmia	sp, {r8, sl}	@ phole stm
 1283 0208 08708DE5 		str	r7, [sp, #8]
 1284 020c FEFFFFEB 		bl	patron_volteo_arm_arm
 1285              	.LVL37:
  40:../pruebas_patron_volteo.c **** 	if(sol_1!=sol_2||sol_1!=sol_3||longitud_1!=longitud_2||longitud_1!=longitud_3){
 1286              		.loc 1 40 0 discriminator 2
 1287 0210 060059E1 		cmp	r9, r6
 1288 0214 00005901 		cmpeq	r9, r0
 1289 0218 0300001A 		bne	.L11
  40:../pruebas_patron_volteo.c **** 	if(sol_1!=sol_2||sol_1!=sol_3||longitud_1!=longitud_2||longitud_1!=longitud_3){
 1290              		.loc 1 40 0 is_stmt 0
 1291 021c 38301BE5 		ldr	r3, [fp, #-56]
 1292 0220 34001BE5 		ldr	r0, [fp, #-52]
 1293              	.LVL38:
 1294 0224 000053E1 		cmp	r3, r0
 1295 0228 0000000A 		beq	.L24
 1296              	.L11:
 1297              	.L21:
 1298 022c FEFFFFEA 		b	.L21
 1299              	.L24:
 1300 0230 30201BE5 		ldr	r2, [fp, #-48]
 1301 0234 020053E1 		cmp	r3, r2
 1302 0238 FBFFFF1A 		bne	.L11
 1303              	.LBE14:
 1304              	.LBE15:
  96:../pruebas_patron_volteo.c **** 	for (i = 0; i < DIM; i++){
 1305              		.loc 1 96 0 is_stmt 1
 1306 023c 014084E2 		add	r4, r4, #1
 1307              	.LVL39:
 1308 0240 080054E3 		cmp	r4, #8
 1309 0244 D3FFFF1A 		bne	.L13
 1310              	.LBB16:
 1311              	.LBB17:
  29:../pruebas_patron_volteo.c **** 	int longitud_1=*longitud;	//valor longitud con el que trabajará la primera función
 1312              		.loc 1 29 0 discriminator 2
 1313 0248 0540A0E1 		mov	r4, r5
 1314              	.LVL40:
  35:../pruebas_patron_volteo.c **** 	sol_1=patron_volteo(tablero,plong_1,FA,CA,SF,SC,color);
 1315              		.loc 1 35 0 discriminator 2
 1316 024c 07A0A0E1 		mov	sl, r7
 1317              	.LVL41:
 1318              	.L16:
 1319              	.LBE17:
 1320              	.LBE16:
 100:../pruebas_patron_volteo.c **** 		patron_volteo_test(t_2,&lon,f,c,SF,SC,color);
 101:../pruebas_patron_volteo.c **** 	}
 102:../pruebas_patron_volteo.c **** 	f=0;
 103:../pruebas_patron_volteo.c **** 	c=0;
 104:../pruebas_patron_volteo.c **** 	for (i = 0; i < DIM; i++){
 105:../pruebas_patron_volteo.c **** 		lon=0;
 106:../pruebas_patron_volteo.c **** 		SF = vSF[i];
 1321              		.loc 1 106 0 discriminator 2
 1322 0250 A8109FE5 		ldr	r1, .L26
 107:../pruebas_patron_volteo.c **** 		SC = vSC[i];
 1323              		.loc 1 107 0 discriminator 2
 1324 0254 083081E2 		add	r3, r1, #8
 106:../pruebas_patron_volteo.c **** 		SF = vSF[i];
 1325              		.loc 1 106 0 discriminator 2
 1326 0258 0570D1E7 		ldrb	r7, [r1, r5]	@ zero_extendqisi2
 1327              	.LVL42:
 1328              		.loc 1 107 0 discriminator 2
 1329 025c 0580D3E7 		ldrb	r8, [r3, r5]	@ zero_extendqisi2
 1330              	.LVL43:
 1331              	.LBB19:
 1332              	.LBB18:
  35:../pruebas_patron_volteo.c **** 	sol_1=patron_volteo(tablero,plong_1,FA,CA,SF,SC,color);
 1333              		.loc 1 35 0 discriminator 2
 1334 0260 30104BE2 		sub	r1, fp, #48
 1335 0264 0420A0E1 		mov	r2, r4
 1336 0268 0430A0E1 		mov	r3, r4
 1337 026c 98009FE5 		ldr	r0, .L26+12
  29:../pruebas_patron_volteo.c **** 	int longitud_1=*longitud;	//valor longitud con el que trabajará la primera función
 1338              		.loc 1 29 0 discriminator 2
 1339 0270 30400BE5 		str	r4, [fp, #-48]
  30:../pruebas_patron_volteo.c **** 	int longitud_2=*longitud;
 1340              		.loc 1 30 0 discriminator 2
 1341 0274 34400BE5 		str	r4, [fp, #-52]
 1342              	.LVL44:
  31:../pruebas_patron_volteo.c **** 	int longitud_3=*longitud;
 1343              		.loc 1 31 0 discriminator 2
 1344 0278 38400BE5 		str	r4, [fp, #-56]
 1345              	.LVL45:
  35:../pruebas_patron_volteo.c **** 	sol_1=patron_volteo(tablero,plong_1,FA,CA,SF,SC,color);
 1346              		.loc 1 35 0 discriminator 2
 1347 027c 80058DE8 		stmia	sp, {r7, r8, sl}	@ phole stm
 1348 0280 FEFFFFEB 		bl	patron_volteo
 1349              	.LVL46:
  36:../pruebas_patron_volteo.c **** 	sol_2=patron_volteo_arm_c(tablero,plong_2,FA,CA,SF,SC,color);
 1350              		.loc 1 36 0 discriminator 2
 1351 0284 34104BE2 		sub	r1, fp, #52
  35:../pruebas_patron_volteo.c **** 	sol_1=patron_volteo(tablero,plong_1,FA,CA,SF,SC,color);
 1352              		.loc 1 35 0 discriminator 2
 1353 0288 0090A0E1 		mov	r9, r0
 1354              	.LVL47:
  36:../pruebas_patron_volteo.c **** 	sol_2=patron_volteo_arm_c(tablero,plong_2,FA,CA,SF,SC,color);
 1355              		.loc 1 36 0 discriminator 2
 1356 028c 0420A0E1 		mov	r2, r4
 1357 0290 0430A0E1 		mov	r3, r4
 1358 0294 70009FE5 		ldr	r0, .L26+12
 1359              	.LVL48:
 1360 0298 80058DE8 		stmia	sp, {r7, r8, sl}	@ phole stm
 1361 029c FEFFFFEB 		bl	patron_volteo_arm_c
  37:../pruebas_patron_volteo.c **** 	sol_3=patron_volteo_arm_arm(tablero,plong_3,FA,CA,SF,SC,color);
 1362              		.loc 1 37 0 discriminator 2
 1363 02a0 38104BE2 		sub	r1, fp, #56
  36:../pruebas_patron_volteo.c **** 	sol_2=patron_volteo_arm_c(tablero,plong_2,FA,CA,SF,SC,color);
 1364              		.loc 1 36 0 discriminator 2
 1365 02a4 0060A0E1 		mov	r6, r0
 1366              	.LVL49:
  37:../pruebas_patron_volteo.c **** 	sol_3=patron_volteo_arm_arm(tablero,plong_3,FA,CA,SF,SC,color);
 1367              		.loc 1 37 0 discriminator 2
 1368 02a8 0420A0E1 		mov	r2, r4
 1369 02ac 58009FE5 		ldr	r0, .L26+12
 1370              	.LVL50:
 1371 02b0 0430A0E1 		mov	r3, r4
 1372 02b4 80058DE8 		stmia	sp, {r7, r8, sl}	@ phole stm
 1373 02b8 FEFFFFEB 		bl	patron_volteo_arm_arm
 1374              	.LVL51:
  40:../pruebas_patron_volteo.c **** 	if(sol_1!=sol_2||sol_1!=sol_3||longitud_1!=longitud_2||longitud_1!=longitud_3){
 1375              		.loc 1 40 0 discriminator 2
 1376 02bc 060059E1 		cmp	r9, r6
 1377 02c0 00005901 		cmpeq	r9, r0
 1378 02c4 0300001A 		bne	.L14
  40:../pruebas_patron_volteo.c **** 	if(sol_1!=sol_2||sol_1!=sol_3||longitud_1!=longitud_2||longitud_1!=longitud_3){
 1379              		.loc 1 40 0 is_stmt 0
 1380 02c8 30301BE5 		ldr	r3, [fp, #-48]
 1381 02cc 34C01BE5 		ldr	ip, [fp, #-52]
 1382 02d0 0C0053E1 		cmp	r3, ip
 1383 02d4 0000000A 		beq	.L25
 1384              	.L14:
 1385              	.L22:
 1386 02d8 FEFFFFEA 		b	.L22
 1387              	.L25:
 1388 02dc 38E01BE5 		ldr	lr, [fp, #-56]
 1389 02e0 0E0053E1 		cmp	r3, lr
 1390 02e4 FBFFFF1A 		bne	.L14
 1391              	.LBE18:
 1392              	.LBE19:
 104:../pruebas_patron_volteo.c **** 	for (i = 0; i < DIM; i++){
 1393              		.loc 1 104 0 is_stmt 1
 1394 02e8 015085E2 		add	r5, r5, #1
 1395              	.LVL52:
 1396 02ec 080055E3 		cmp	r5, #8
 1397 02f0 D6FFFF1A 		bne	.L16
 108:../pruebas_patron_volteo.c **** 		patron_volteo_test(t_3,&lon,f,c,SF,SC,color);
 109:../pruebas_patron_volteo.c **** 	}
 110:../pruebas_patron_volteo.c **** }
 1398              		.loc 1 110 0
 1399 02f4 28D04BE2 		sub	sp, fp, #40
 1400 02f8 F06F9DE8 		ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, lr}
 1401 02fc 1EFF2FE1 		bx	lr
 1402              	.L27:
 1403              		.align	2
 1404              	.L26:
 1405 0300 00000000 		.word	.LANCHOR0
 1406 0304 00000000 		.word	.LANCHOR1
 1407 0308 40000000 		.word	.LANCHOR1+64
 1408 030c 80000000 		.word	.LANCHOR1+128
 1409              		.cfi_endproc
 1410              	.LFE1:
 1412              		.align	2
 1413              		.global	pruebas_tiempo_patron_volteo
 1415              	pruebas_tiempo_patron_volteo:
 1416              	.LFB2:
 111:../pruebas_patron_volteo.c **** 
 112:../pruebas_patron_volteo.c **** 
 113:../pruebas_patron_volteo.c **** /*
 114:../pruebas_patron_volteo.c ****  * Utilizada para medir los tiempos de las 3 funciones patron_volteo.
 115:../pruebas_patron_volteo.c ****  * Realizamos la medida individual de cada una de las 8 posibles posiciones incluidas en
 116:../pruebas_patron_volteo.c ****  * los vectores:vSF y vSC, y también la medida de las 8 en
 117:../pruebas_patron_volteo.c ****  * bucle (descomentar lineas)
 118:../pruebas_patron_volteo.c ****  */
 119:../pruebas_patron_volteo.c **** void pruebas_tiempo_patron_volteo(){
 1417              		.loc 1 119 0
 1418              		.cfi_startproc
 1419              		@ Function supports interworking.
 1420              		@ args = 0, pretend = 0, frame = 8
 1421              		@ frame_needed = 1, uses_anonymous_args = 0
 1422              	.LVL53:
 1423 0310 0DC0A0E1 		mov	ip, sp
 1424              	.LCFI4:
 1425              		.cfi_def_cfa_register 12
 1426 0314 F0DD2DE9 		stmfd	sp!, {r4, r5, r6, r7, r8, sl, fp, ip, lr, pc}
 1427 0318 04B04CE2 		sub	fp, ip, #4
 1428              		.cfi_offset 14, -8
 1429              		.cfi_offset 13, -12
 1430              		.cfi_offset 11, -16
 1431              		.cfi_offset 10, -20
 1432              		.cfi_offset 8, -24
 1433              		.cfi_offset 7, -28
 1434              		.cfi_offset 6, -32
 1435              		.cfi_offset 5, -36
 1436              		.cfi_offset 4, -40
 1437              	.LCFI5:
 1438              		.cfi_def_cfa 11, 4
 1439 031c 18D04DE2 		sub	sp, sp, #24
 120:../pruebas_patron_volteo.c **** 	//Tablero Medicion de tiempos (Fila 2 Columna 3)
 121:../pruebas_patron_volteo.c **** 	static char __attribute__ ((aligned (8))) t_t[DIM][DIM] = {
 122:../pruebas_patron_volteo.c **** 				{0,0,0,0,0,0,0,0},
 123:../pruebas_patron_volteo.c **** 			    {0,0,0,0,0,0,0,0},
 124:../pruebas_patron_volteo.c **** 			    {0,0,0,2,0,0,0,0},
 125:../pruebas_patron_volteo.c **** 			    {0,0,0,1,2,0,0,0},
 126:../pruebas_patron_volteo.c **** 			    {0,0,0,2,1,0,0,0},
 127:../pruebas_patron_volteo.c **** 			    {0,0,0,0,0,0,0,0},
 128:../pruebas_patron_volteo.c **** 			    {0,0,0,0,0,0,0,0},
 129:../pruebas_patron_volteo.c **** 			    {0,0,0,0,0,0,0,0}
 130:../pruebas_patron_volteo.c **** 	};
 131:../pruebas_patron_volteo.c **** 	unsigned int t1=0;
 132:../pruebas_patron_volteo.c **** 	unsigned int t2=0;
 133:../pruebas_patron_volteo.c **** 	unsigned int t3=0;
 134:../pruebas_patron_volteo.c **** 	unsigned int bruto1[DIM];
 135:../pruebas_patron_volteo.c **** 	unsigned int bruto2[DIM];
 136:../pruebas_patron_volteo.c **** 	unsigned int bruto3[DIM];
 137:../pruebas_patron_volteo.c **** 	unsigned int total;
 138:../pruebas_patron_volteo.c **** 	int i,l;
 139:../pruebas_patron_volteo.c **** 	char f,c,color;
 140:../pruebas_patron_volteo.c **** 	f=2;
 141:../pruebas_patron_volteo.c **** 	c=3;
 142:../pruebas_patron_volteo.c **** 	color=2;
 143:../pruebas_patron_volteo.c **** 	timer2_inicializar();
 144:../pruebas_patron_volteo.c **** 
 145:../pruebas_patron_volteo.c **** 
 146:../pruebas_patron_volteo.c **** 	//timer2_empezar();
 147:../pruebas_patron_volteo.c **** 	for (i = 0; i < DIM; i++){
 148:../pruebas_patron_volteo.c **** 		l=0;
 1440              		.loc 1 148 0
 1441 0320 0050A0E3 		mov	r5, #0
 1442 0324 24604BE2 		sub	r6, fp, #36
 149:../pruebas_patron_volteo.c **** 		timer2_empezar();
 150:../pruebas_patron_volteo.c **** 		patron_volteo(t_t,&l,f,c,vSF[i],vSC[i],color);
 1443              		.loc 1 150 0
 1444 0328 14749FE5 		ldr	r7, .L29
 143:../pruebas_patron_volteo.c **** 	timer2_inicializar();
 1445              		.loc 1 143 0
 1446 032c FEFFFFEB 		bl	timer2_inicializar
 1447              	.LVL54:
 148:../pruebas_patron_volteo.c **** 		l=0;
 1448              		.loc 1 148 0
 1449 0330 045026E5 		str	r5, [r6, #-4]!
 1450              	.LVL55:
 1451              		.loc 1 150 0
 1452 0334 0240A0E3 		mov	r4, #2
 1453 0338 FFA0A0E3 		mov	sl, #255
 149:../pruebas_patron_volteo.c **** 		timer2_empezar();
 1454              		.loc 1 149 0
 1455 033c FEFFFFEB 		bl	timer2_empezar
 1456              		.loc 1 150 0
 1457 0340 0610A0E1 		mov	r1, r6
 1458 0344 0420A0E1 		mov	r2, r4
 1459 0348 0330A0E3 		mov	r3, #3
 1460 034c 0700A0E1 		mov	r0, r7
 1461 0350 0180A0E3 		mov	r8, #1
 1462 0354 00A08DE5 		str	sl, [sp, #0]
 1463 0358 04508DE5 		str	r5, [sp, #4]
 1464 035c 08408DE5 		str	r4, [sp, #8]
 1465 0360 FEFFFFEB 		bl	patron_volteo
 151:../pruebas_patron_volteo.c **** 		bruto1[i] = timer2_parar();
 1466              		.loc 1 151 0
 1467 0364 FEFFFFEB 		bl	timer2_parar
 1468              	.LVL56:
 148:../pruebas_patron_volteo.c **** 		l=0;
 1469              		.loc 1 148 0
 1470 0368 28500BE5 		str	r5, [fp, #-40]
 1471              	.LVL57:
 149:../pruebas_patron_volteo.c **** 		timer2_empezar();
 1472              		.loc 1 149 0
 1473 036c FEFFFFEB 		bl	timer2_empezar
 150:../pruebas_patron_volteo.c **** 		patron_volteo(t_t,&l,f,c,vSF[i],vSC[i],color);
 1474              		.loc 1 150 0
 1475 0370 0610A0E1 		mov	r1, r6
 1476 0374 0420A0E1 		mov	r2, r4
 1477 0378 0330A0E3 		mov	r3, #3
 1478 037c 0700A0E1 		mov	r0, r7
 1479 0380 00A08DE5 		str	sl, [sp, #0]
 1480 0384 04808DE5 		str	r8, [sp, #4]
 1481 0388 08408DE5 		str	r4, [sp, #8]
 1482 038c FEFFFFEB 		bl	patron_volteo
 1483              		.loc 1 151 0
 1484 0390 FEFFFFEB 		bl	timer2_parar
 1485              	.LVL58:
 148:../pruebas_patron_volteo.c **** 		l=0;
 1486              		.loc 1 148 0
 1487 0394 28500BE5 		str	r5, [fp, #-40]
 149:../pruebas_patron_volteo.c **** 		timer2_empezar();
 1488              		.loc 1 149 0
 1489 0398 FEFFFFEB 		bl	timer2_empezar
 150:../pruebas_patron_volteo.c **** 		patron_volteo(t_t,&l,f,c,vSF[i],vSC[i],color);
 1490              		.loc 1 150 0
 1491 039c 0610A0E1 		mov	r1, r6
 1492 03a0 0420A0E1 		mov	r2, r4
 1493 03a4 0330A0E3 		mov	r3, #3
 1494 03a8 0700A0E1 		mov	r0, r7
 1495 03ac 20018DE8 		stmia	sp, {r5, r8}	@ phole stm
 1496 03b0 08408DE5 		str	r4, [sp, #8]
 1497 03b4 FEFFFFEB 		bl	patron_volteo
 1498              		.loc 1 151 0
 1499 03b8 FEFFFFEB 		bl	timer2_parar
 1500              	.LVL59:
 148:../pruebas_patron_volteo.c **** 		l=0;
 1501              		.loc 1 148 0
 1502 03bc 28500BE5 		str	r5, [fp, #-40]
 149:../pruebas_patron_volteo.c **** 		timer2_empezar();
 1503              		.loc 1 149 0
 1504 03c0 FEFFFFEB 		bl	timer2_empezar
 150:../pruebas_patron_volteo.c **** 		patron_volteo(t_t,&l,f,c,vSF[i],vSC[i],color);
 1505              		.loc 1 150 0
 1506 03c4 0610A0E1 		mov	r1, r6
 1507 03c8 0420A0E1 		mov	r2, r4
 1508 03cc 0330A0E3 		mov	r3, #3
 1509 03d0 0700A0E1 		mov	r0, r7
 1510 03d4 00808DE5 		str	r8, [sp, #0]
 1511 03d8 04808DE5 		str	r8, [sp, #4]
 1512 03dc 08408DE5 		str	r4, [sp, #8]
 1513 03e0 FEFFFFEB 		bl	patron_volteo
 1514              		.loc 1 151 0
 1515 03e4 FEFFFFEB 		bl	timer2_parar
 1516              	.LVL60:
 148:../pruebas_patron_volteo.c **** 		l=0;
 1517              		.loc 1 148 0
 1518 03e8 28500BE5 		str	r5, [fp, #-40]
 149:../pruebas_patron_volteo.c **** 		timer2_empezar();
 1519              		.loc 1 149 0
 1520 03ec FEFFFFEB 		bl	timer2_empezar
 150:../pruebas_patron_volteo.c **** 		patron_volteo(t_t,&l,f,c,vSF[i],vSC[i],color);
 1521              		.loc 1 150 0
 1522 03f0 0610A0E1 		mov	r1, r6
 1523 03f4 0420A0E1 		mov	r2, r4
 1524 03f8 0330A0E3 		mov	r3, #3
 1525 03fc 0700A0E1 		mov	r0, r7
 1526 0400 00808DE5 		str	r8, [sp, #0]
 1527 0404 04508DE5 		str	r5, [sp, #4]
 1528 0408 08408DE5 		str	r4, [sp, #8]
 1529 040c FEFFFFEB 		bl	patron_volteo
 1530              		.loc 1 151 0
 1531 0410 FEFFFFEB 		bl	timer2_parar
 1532              	.LVL61:
 148:../pruebas_patron_volteo.c **** 		l=0;
 1533              		.loc 1 148 0
 1534 0414 28500BE5 		str	r5, [fp, #-40]
 149:../pruebas_patron_volteo.c **** 		timer2_empezar();
 1535              		.loc 1 149 0
 1536 0418 FEFFFFEB 		bl	timer2_empezar
 150:../pruebas_patron_volteo.c **** 		patron_volteo(t_t,&l,f,c,vSF[i],vSC[i],color);
 1537              		.loc 1 150 0
 1538 041c 0610A0E1 		mov	r1, r6
 1539 0420 0420A0E1 		mov	r2, r4
 1540 0424 0330A0E3 		mov	r3, #3
 1541 0428 0700A0E1 		mov	r0, r7
 1542 042c 00058DE8 		stmia	sp, {r8, sl}	@ phole stm
 1543 0430 08408DE5 		str	r4, [sp, #8]
 1544 0434 FEFFFFEB 		bl	patron_volteo
 1545              		.loc 1 151 0
 1546 0438 FEFFFFEB 		bl	timer2_parar
 1547              	.LVL62:
 148:../pruebas_patron_volteo.c **** 		l=0;
 1548              		.loc 1 148 0
 1549 043c 28500BE5 		str	r5, [fp, #-40]
 149:../pruebas_patron_volteo.c **** 		timer2_empezar();
 1550              		.loc 1 149 0
 1551 0440 FEFFFFEB 		bl	timer2_empezar
 150:../pruebas_patron_volteo.c **** 		patron_volteo(t_t,&l,f,c,vSF[i],vSC[i],color);
 1552              		.loc 1 150 0
 1553 0444 0610A0E1 		mov	r1, r6
 1554 0448 0420A0E1 		mov	r2, r4
 1555 044c 0330A0E3 		mov	r3, #3
 1556 0450 0700A0E1 		mov	r0, r7
 1557 0454 20048DE8 		stmia	sp, {r5, sl}	@ phole stm
 1558 0458 08408DE5 		str	r4, [sp, #8]
 1559 045c FEFFFFEB 		bl	patron_volteo
 1560              		.loc 1 151 0
 1561 0460 FEFFFFEB 		bl	timer2_parar
 1562              	.LVL63:
 148:../pruebas_patron_volteo.c **** 		l=0;
 1563              		.loc 1 148 0
 1564 0464 28500BE5 		str	r5, [fp, #-40]
 149:../pruebas_patron_volteo.c **** 		timer2_empezar();
 1565              		.loc 1 149 0
 1566 0468 FEFFFFEB 		bl	timer2_empezar
 150:../pruebas_patron_volteo.c **** 		patron_volteo(t_t,&l,f,c,vSF[i],vSC[i],color);
 1567              		.loc 1 150 0
 1568 046c 0610A0E1 		mov	r1, r6
 1569 0470 0420A0E1 		mov	r2, r4
 1570 0474 0330A0E3 		mov	r3, #3
 1571 0478 0700A0E1 		mov	r0, r7
 1572 047c 00A08DE5 		str	sl, [sp, #0]
 1573 0480 04A08DE5 		str	sl, [sp, #4]
 1574 0484 08408DE5 		str	r4, [sp, #8]
 1575 0488 FEFFFFEB 		bl	patron_volteo
 1576              		.loc 1 151 0
 1577 048c FEFFFFEB 		bl	timer2_parar
 1578              	.LVL64:
 152:../pruebas_patron_volteo.c **** 		t1+=bruto1[i];
 153:../pruebas_patron_volteo.c **** 	}
 154:../pruebas_patron_volteo.c **** 	//t1 = timer2_parar();
 155:../pruebas_patron_volteo.c **** 
 156:../pruebas_patron_volteo.c **** 	//timer2_empezar();
 157:../pruebas_patron_volteo.c **** 	for (i = 0; i < DIM; i++){
 158:../pruebas_patron_volteo.c **** 		l=0;
 1579              		.loc 1 158 0
 1580 0490 28500BE5 		str	r5, [fp, #-40]
 159:../pruebas_patron_volteo.c **** 		timer2_empezar();
 1581              		.loc 1 159 0
 1582 0494 FEFFFFEB 		bl	timer2_empezar
 160:../pruebas_patron_volteo.c **** 		patron_volteo_arm_c(t_t,&l,f,c,vSF[i],vSC[i],color);
 1583              		.loc 1 160 0
 1584 0498 0610A0E1 		mov	r1, r6
 1585 049c 0420A0E1 		mov	r2, r4
 1586 04a0 0330A0E3 		mov	r3, #3
 1587 04a4 0700A0E1 		mov	r0, r7
 1588 04a8 00A08DE5 		str	sl, [sp, #0]
 1589 04ac 04508DE5 		str	r5, [sp, #4]
 1590 04b0 08408DE5 		str	r4, [sp, #8]
 1591 04b4 FEFFFFEB 		bl	patron_volteo_arm_c
 161:../pruebas_patron_volteo.c **** 		bruto2[i] = timer2_parar();
 1592              		.loc 1 161 0
 1593 04b8 FEFFFFEB 		bl	timer2_parar
 1594              	.LVL65:
 158:../pruebas_patron_volteo.c **** 		l=0;
 1595              		.loc 1 158 0
 1596 04bc 28500BE5 		str	r5, [fp, #-40]
 159:../pruebas_patron_volteo.c **** 		timer2_empezar();
 1597              		.loc 1 159 0
 1598 04c0 FEFFFFEB 		bl	timer2_empezar
 160:../pruebas_patron_volteo.c **** 		patron_volteo_arm_c(t_t,&l,f,c,vSF[i],vSC[i],color);
 1599              		.loc 1 160 0
 1600 04c4 0610A0E1 		mov	r1, r6
 1601 04c8 0420A0E1 		mov	r2, r4
 1602 04cc 0330A0E3 		mov	r3, #3
 1603 04d0 0700A0E1 		mov	r0, r7
 1604 04d4 00A08DE5 		str	sl, [sp, #0]
 1605 04d8 04808DE5 		str	r8, [sp, #4]
 1606 04dc 08408DE5 		str	r4, [sp, #8]
 1607 04e0 FEFFFFEB 		bl	patron_volteo_arm_c
 1608              		.loc 1 161 0
 1609 04e4 FEFFFFEB 		bl	timer2_parar
 1610              	.LVL66:
 158:../pruebas_patron_volteo.c **** 		l=0;
 1611              		.loc 1 158 0
 1612 04e8 28500BE5 		str	r5, [fp, #-40]
 159:../pruebas_patron_volteo.c **** 		timer2_empezar();
 1613              		.loc 1 159 0
 1614 04ec FEFFFFEB 		bl	timer2_empezar
 160:../pruebas_patron_volteo.c **** 		patron_volteo_arm_c(t_t,&l,f,c,vSF[i],vSC[i],color);
 1615              		.loc 1 160 0
 1616 04f0 0610A0E1 		mov	r1, r6
 1617 04f4 0420A0E1 		mov	r2, r4
 1618 04f8 0330A0E3 		mov	r3, #3
 1619 04fc 0700A0E1 		mov	r0, r7
 1620 0500 20018DE8 		stmia	sp, {r5, r8}	@ phole stm
 1621 0504 08408DE5 		str	r4, [sp, #8]
 1622 0508 FEFFFFEB 		bl	patron_volteo_arm_c
 1623              		.loc 1 161 0
 1624 050c FEFFFFEB 		bl	timer2_parar
 1625              	.LVL67:
 158:../pruebas_patron_volteo.c **** 		l=0;
 1626              		.loc 1 158 0
 1627 0510 28500BE5 		str	r5, [fp, #-40]
 159:../pruebas_patron_volteo.c **** 		timer2_empezar();
 1628              		.loc 1 159 0
 1629 0514 FEFFFFEB 		bl	timer2_empezar
 160:../pruebas_patron_volteo.c **** 		patron_volteo_arm_c(t_t,&l,f,c,vSF[i],vSC[i],color);
 1630              		.loc 1 160 0
 1631 0518 0610A0E1 		mov	r1, r6
 1632 051c 0420A0E1 		mov	r2, r4
 1633 0520 0330A0E3 		mov	r3, #3
 1634 0524 0700A0E1 		mov	r0, r7
 1635 0528 00808DE5 		str	r8, [sp, #0]
 1636 052c 04808DE5 		str	r8, [sp, #4]
 1637 0530 08408DE5 		str	r4, [sp, #8]
 1638 0534 FEFFFFEB 		bl	patron_volteo_arm_c
 1639              		.loc 1 161 0
 1640 0538 FEFFFFEB 		bl	timer2_parar
 1641              	.LVL68:
 158:../pruebas_patron_volteo.c **** 		l=0;
 1642              		.loc 1 158 0
 1643 053c 28500BE5 		str	r5, [fp, #-40]
 159:../pruebas_patron_volteo.c **** 		timer2_empezar();
 1644              		.loc 1 159 0
 1645 0540 FEFFFFEB 		bl	timer2_empezar
 160:../pruebas_patron_volteo.c **** 		patron_volteo_arm_c(t_t,&l,f,c,vSF[i],vSC[i],color);
 1646              		.loc 1 160 0
 1647 0544 0610A0E1 		mov	r1, r6
 1648 0548 0420A0E1 		mov	r2, r4
 1649 054c 0330A0E3 		mov	r3, #3
 1650 0550 0700A0E1 		mov	r0, r7
 1651 0554 00808DE5 		str	r8, [sp, #0]
 1652 0558 04508DE5 		str	r5, [sp, #4]
 1653 055c 08408DE5 		str	r4, [sp, #8]
 1654 0560 FEFFFFEB 		bl	patron_volteo_arm_c
 1655              		.loc 1 161 0
 1656 0564 FEFFFFEB 		bl	timer2_parar
 1657              	.LVL69:
 158:../pruebas_patron_volteo.c **** 		l=0;
 1658              		.loc 1 158 0
 1659 0568 28500BE5 		str	r5, [fp, #-40]
 159:../pruebas_patron_volteo.c **** 		timer2_empezar();
 1660              		.loc 1 159 0
 1661 056c FEFFFFEB 		bl	timer2_empezar
 160:../pruebas_patron_volteo.c **** 		patron_volteo_arm_c(t_t,&l,f,c,vSF[i],vSC[i],color);
 1662              		.loc 1 160 0
 1663 0570 0610A0E1 		mov	r1, r6
 1664 0574 0420A0E1 		mov	r2, r4
 1665 0578 0330A0E3 		mov	r3, #3
 1666 057c 0700A0E1 		mov	r0, r7
 1667 0580 00058DE8 		stmia	sp, {r8, sl}	@ phole stm
 1668 0584 08408DE5 		str	r4, [sp, #8]
 1669 0588 FEFFFFEB 		bl	patron_volteo_arm_c
 1670              		.loc 1 161 0
 1671 058c FEFFFFEB 		bl	timer2_parar
 1672              	.LVL70:
 158:../pruebas_patron_volteo.c **** 		l=0;
 1673              		.loc 1 158 0
 1674 0590 28500BE5 		str	r5, [fp, #-40]
 159:../pruebas_patron_volteo.c **** 		timer2_empezar();
 1675              		.loc 1 159 0
 1676 0594 FEFFFFEB 		bl	timer2_empezar
 160:../pruebas_patron_volteo.c **** 		patron_volteo_arm_c(t_t,&l,f,c,vSF[i],vSC[i],color);
 1677              		.loc 1 160 0
 1678 0598 0610A0E1 		mov	r1, r6
 1679 059c 0420A0E1 		mov	r2, r4
 1680 05a0 0330A0E3 		mov	r3, #3
 1681 05a4 0700A0E1 		mov	r0, r7
 1682 05a8 20048DE8 		stmia	sp, {r5, sl}	@ phole stm
 1683 05ac 08408DE5 		str	r4, [sp, #8]
 1684 05b0 FEFFFFEB 		bl	patron_volteo_arm_c
 1685              		.loc 1 161 0
 1686 05b4 FEFFFFEB 		bl	timer2_parar
 1687              	.LVL71:
 158:../pruebas_patron_volteo.c **** 		l=0;
 1688              		.loc 1 158 0
 1689 05b8 28500BE5 		str	r5, [fp, #-40]
 159:../pruebas_patron_volteo.c **** 		timer2_empezar();
 1690              		.loc 1 159 0
 1691 05bc FEFFFFEB 		bl	timer2_empezar
 160:../pruebas_patron_volteo.c **** 		patron_volteo_arm_c(t_t,&l,f,c,vSF[i],vSC[i],color);
 1692              		.loc 1 160 0
 1693 05c0 0610A0E1 		mov	r1, r6
 1694 05c4 0420A0E1 		mov	r2, r4
 1695 05c8 0330A0E3 		mov	r3, #3
 1696 05cc 0700A0E1 		mov	r0, r7
 1697 05d0 00A08DE5 		str	sl, [sp, #0]
 1698 05d4 04A08DE5 		str	sl, [sp, #4]
 1699 05d8 08408DE5 		str	r4, [sp, #8]
 1700 05dc FEFFFFEB 		bl	patron_volteo_arm_c
 1701              		.loc 1 161 0
 1702 05e0 FEFFFFEB 		bl	timer2_parar
 1703              	.LVL72:
 162:../pruebas_patron_volteo.c **** 		t2+=bruto2[i];
 163:../pruebas_patron_volteo.c **** 	}
 164:../pruebas_patron_volteo.c **** 	//t2 = timer2_parar();
 165:../pruebas_patron_volteo.c **** 
 166:../pruebas_patron_volteo.c **** 	//timer2_empezar();
 167:../pruebas_patron_volteo.c **** 	for (i = 0; i < DIM; i++){
 168:../pruebas_patron_volteo.c **** 		l=0;
 1704              		.loc 1 168 0
 1705 05e4 28500BE5 		str	r5, [fp, #-40]
 169:../pruebas_patron_volteo.c **** 		timer2_empezar();
 1706              		.loc 1 169 0
 1707 05e8 FEFFFFEB 		bl	timer2_empezar
 170:../pruebas_patron_volteo.c **** 		patron_volteo_arm_arm(t_t,&l,f,c,vSF[i],vSC[i],color);
 1708              		.loc 1 170 0
 1709 05ec 0610A0E1 		mov	r1, r6
 1710 05f0 0420A0E1 		mov	r2, r4
 1711 05f4 0330A0E3 		mov	r3, #3
 1712 05f8 0700A0E1 		mov	r0, r7
 1713 05fc 00A08DE5 		str	sl, [sp, #0]
 1714 0600 04508DE5 		str	r5, [sp, #4]
 1715 0604 08408DE5 		str	r4, [sp, #8]
 1716 0608 FEFFFFEB 		bl	patron_volteo_arm_arm
 171:../pruebas_patron_volteo.c **** 		bruto3[i] = timer2_parar();
 1717              		.loc 1 171 0
 1718 060c FEFFFFEB 		bl	timer2_parar
 1719              	.LVL73:
 168:../pruebas_patron_volteo.c **** 		l=0;
 1720              		.loc 1 168 0
 1721 0610 28500BE5 		str	r5, [fp, #-40]
 169:../pruebas_patron_volteo.c **** 		timer2_empezar();
 1722              		.loc 1 169 0
 1723 0614 FEFFFFEB 		bl	timer2_empezar
 170:../pruebas_patron_volteo.c **** 		patron_volteo_arm_arm(t_t,&l,f,c,vSF[i],vSC[i],color);
 1724              		.loc 1 170 0
 1725 0618 0610A0E1 		mov	r1, r6
 1726 061c 0420A0E1 		mov	r2, r4
 1727 0620 0330A0E3 		mov	r3, #3
 1728 0624 0700A0E1 		mov	r0, r7
 1729 0628 00A08DE5 		str	sl, [sp, #0]
 1730 062c 04808DE5 		str	r8, [sp, #4]
 1731 0630 08408DE5 		str	r4, [sp, #8]
 1732 0634 FEFFFFEB 		bl	patron_volteo_arm_arm
 1733              		.loc 1 171 0
 1734 0638 FEFFFFEB 		bl	timer2_parar
 1735              	.LVL74:
 168:../pruebas_patron_volteo.c **** 		l=0;
 1736              		.loc 1 168 0
 1737 063c 28500BE5 		str	r5, [fp, #-40]
 169:../pruebas_patron_volteo.c **** 		timer2_empezar();
 1738              		.loc 1 169 0
 1739 0640 FEFFFFEB 		bl	timer2_empezar
 170:../pruebas_patron_volteo.c **** 		patron_volteo_arm_arm(t_t,&l,f,c,vSF[i],vSC[i],color);
 1740              		.loc 1 170 0
 1741 0644 0610A0E1 		mov	r1, r6
 1742 0648 0420A0E1 		mov	r2, r4
 1743 064c 0330A0E3 		mov	r3, #3
 1744 0650 0700A0E1 		mov	r0, r7
 1745 0654 20018DE8 		stmia	sp, {r5, r8}	@ phole stm
 1746 0658 08408DE5 		str	r4, [sp, #8]
 1747 065c FEFFFFEB 		bl	patron_volteo_arm_arm
 1748              		.loc 1 171 0
 1749 0660 FEFFFFEB 		bl	timer2_parar
 1750              	.LVL75:
 168:../pruebas_patron_volteo.c **** 		l=0;
 1751              		.loc 1 168 0
 1752 0664 28500BE5 		str	r5, [fp, #-40]
 169:../pruebas_patron_volteo.c **** 		timer2_empezar();
 1753              		.loc 1 169 0
 1754 0668 FEFFFFEB 		bl	timer2_empezar
 170:../pruebas_patron_volteo.c **** 		patron_volteo_arm_arm(t_t,&l,f,c,vSF[i],vSC[i],color);
 1755              		.loc 1 170 0
 1756 066c 0610A0E1 		mov	r1, r6
 1757 0670 0420A0E1 		mov	r2, r4
 1758 0674 0330A0E3 		mov	r3, #3
 1759 0678 0700A0E1 		mov	r0, r7
 1760 067c 00808DE5 		str	r8, [sp, #0]
 1761 0680 04808DE5 		str	r8, [sp, #4]
 1762 0684 08408DE5 		str	r4, [sp, #8]
 1763 0688 FEFFFFEB 		bl	patron_volteo_arm_arm
 1764              		.loc 1 171 0
 1765 068c FEFFFFEB 		bl	timer2_parar
 1766              	.LVL76:
 168:../pruebas_patron_volteo.c **** 		l=0;
 1767              		.loc 1 168 0
 1768 0690 28500BE5 		str	r5, [fp, #-40]
 169:../pruebas_patron_volteo.c **** 		timer2_empezar();
 1769              		.loc 1 169 0
 1770 0694 FEFFFFEB 		bl	timer2_empezar
 170:../pruebas_patron_volteo.c **** 		patron_volteo_arm_arm(t_t,&l,f,c,vSF[i],vSC[i],color);
 1771              		.loc 1 170 0
 1772 0698 0610A0E1 		mov	r1, r6
 1773 069c 0420A0E1 		mov	r2, r4
 1774 06a0 0330A0E3 		mov	r3, #3
 1775 06a4 0700A0E1 		mov	r0, r7
 1776 06a8 00808DE5 		str	r8, [sp, #0]
 1777 06ac 04508DE5 		str	r5, [sp, #4]
 1778 06b0 08408DE5 		str	r4, [sp, #8]
 1779 06b4 FEFFFFEB 		bl	patron_volteo_arm_arm
 1780              		.loc 1 171 0
 1781 06b8 FEFFFFEB 		bl	timer2_parar
 1782              	.LVL77:
 168:../pruebas_patron_volteo.c **** 		l=0;
 1783              		.loc 1 168 0
 1784 06bc 28500BE5 		str	r5, [fp, #-40]
 169:../pruebas_patron_volteo.c **** 		timer2_empezar();
 1785              		.loc 1 169 0
 1786 06c0 FEFFFFEB 		bl	timer2_empezar
 170:../pruebas_patron_volteo.c **** 		patron_volteo_arm_arm(t_t,&l,f,c,vSF[i],vSC[i],color);
 1787              		.loc 1 170 0
 1788 06c4 0610A0E1 		mov	r1, r6
 1789 06c8 0420A0E1 		mov	r2, r4
 1790 06cc 0330A0E3 		mov	r3, #3
 1791 06d0 0700A0E1 		mov	r0, r7
 1792 06d4 00058DE8 		stmia	sp, {r8, sl}	@ phole stm
 1793 06d8 08408DE5 		str	r4, [sp, #8]
 1794 06dc FEFFFFEB 		bl	patron_volteo_arm_arm
 1795              		.loc 1 171 0
 1796 06e0 FEFFFFEB 		bl	timer2_parar
 1797              	.LVL78:
 168:../pruebas_patron_volteo.c **** 		l=0;
 1798              		.loc 1 168 0
 1799 06e4 28500BE5 		str	r5, [fp, #-40]
 169:../pruebas_patron_volteo.c **** 		timer2_empezar();
 1800              		.loc 1 169 0
 1801 06e8 FEFFFFEB 		bl	timer2_empezar
 170:../pruebas_patron_volteo.c **** 		patron_volteo_arm_arm(t_t,&l,f,c,vSF[i],vSC[i],color);
 1802              		.loc 1 170 0
 1803 06ec 0610A0E1 		mov	r1, r6
 1804 06f0 0420A0E1 		mov	r2, r4
 1805 06f4 0330A0E3 		mov	r3, #3
 1806 06f8 0700A0E1 		mov	r0, r7
 1807 06fc 20048DE8 		stmia	sp, {r5, sl}	@ phole stm
 1808 0700 08408DE5 		str	r4, [sp, #8]
 1809 0704 FEFFFFEB 		bl	patron_volteo_arm_arm
 1810              		.loc 1 171 0
 1811 0708 FEFFFFEB 		bl	timer2_parar
 1812              	.LVL79:
 168:../pruebas_patron_volteo.c **** 		l=0;
 1813              		.loc 1 168 0
 1814 070c 28500BE5 		str	r5, [fp, #-40]
 169:../pruebas_patron_volteo.c **** 		timer2_empezar();
 1815              		.loc 1 169 0
 1816 0710 FEFFFFEB 		bl	timer2_empezar
 170:../pruebas_patron_volteo.c **** 		patron_volteo_arm_arm(t_t,&l,f,c,vSF[i],vSC[i],color);
 1817              		.loc 1 170 0
 1818 0714 0610A0E1 		mov	r1, r6
 1819 0718 0420A0E1 		mov	r2, r4
 1820 071c 0330A0E3 		mov	r3, #3
 1821 0720 0700A0E1 		mov	r0, r7
 1822 0724 00A08DE5 		str	sl, [sp, #0]
 1823 0728 04A08DE5 		str	sl, [sp, #4]
 1824 072c 08408DE5 		str	r4, [sp, #8]
 1825 0730 FEFFFFEB 		bl	patron_volteo_arm_arm
 1826              		.loc 1 171 0
 1827 0734 FEFFFFEB 		bl	timer2_parar
 1828              	.LVL80:
 172:../pruebas_patron_volteo.c **** 		t3+=bruto3[i];
 173:../pruebas_patron_volteo.c **** 	}
 174:../pruebas_patron_volteo.c **** 	//t3 = timer2_parar();
 175:../pruebas_patron_volteo.c **** 	total=t1+t2+t3;	// PONER BREAKPOINT AQUI
 176:../pruebas_patron_volteo.c **** 
 177:../pruebas_patron_volteo.c **** }
 1829              		.loc 1 177 0
 1830 0738 24D04BE2 		sub	sp, fp, #36
 1831 073c F06D9DE8 		ldmfd	sp, {r4, r5, r6, r7, r8, sl, fp, sp, lr}
 1832 0740 1EFF2FE1 		bx	lr
 1833              	.L30:
 1834              		.align	2
 1835              	.L29:
 1836 0744 C0000000 		.word	.LANCHOR1+192
 1837              		.cfi_endproc
 1838              	.LFE2:
 1840              		.section	.rodata
 1841              		.align	2
 1842              		.set	.LANCHOR0,. + 0
 1845              	vSF:
 1846 0000 FF       		.byte	-1
 1847 0001 FF       		.byte	-1
 1848 0002 00       		.byte	0
 1849 0003 01       		.byte	1
 1850 0004 01       		.byte	1
 1851 0005 01       		.byte	1
 1852 0006 00       		.byte	0
 1853 0007 FF       		.byte	-1
 1856              	vSC:
 1857 0008 00       		.byte	0
 1858 0009 01       		.byte	1
 1859 000a 01       		.byte	1
 1860 000b 01       		.byte	1
 1861 000c 00       		.byte	0
 1862 000d FF       		.byte	-1
 1863 000e FF       		.byte	-1
 1864 000f FF       		.byte	-1
 1865              		.data
 1866              		.align	3
 1867              		.set	.LANCHOR1,. + 0
 1870              	t_1.3998:
 1871 0000 02       		.byte	2
 1872 0001 00       		.byte	0
 1873 0002 00       		.byte	0
 1874 0003 02       		.byte	2
 1875 0004 00       		.byte	0
 1876 0005 00       		.byte	0
 1877 0006 02       		.byte	2
 1878 0007 00       		.byte	0
 1879 0008 00       		.byte	0
 1880 0009 01       		.byte	1
 1881 000a 00       		.byte	0
 1882 000b 01       		.byte	1
 1883 000c 00       		.byte	0
 1884 000d 01       		.byte	1
 1885 000e 00       		.byte	0
 1886 000f 00       		.byte	0
 1887 0010 00       		.byte	0
 1888 0011 00       		.byte	0
 1889 0012 01       		.byte	1
 1890 0013 01       		.byte	1
 1891 0014 01       		.byte	1
 1892 0015 00       		.byte	0
 1893 0016 00       		.byte	0
 1894 0017 00       		.byte	0
 1895 0018 02       		.byte	2
 1896 0019 01       		.byte	1
 1897 001a 01       		.byte	1
 1898 001b 02       		.byte	2
 1899 001c 01       		.byte	1
 1900 001d 01       		.byte	1
 1901 001e 01       		.byte	1
 1902 001f 02       		.byte	2
 1903 0020 00       		.byte	0
 1904 0021 00       		.byte	0
 1905 0022 01       		.byte	1
 1906 0023 01       		.byte	1
 1907 0024 01       		.byte	1
 1908 0025 00       		.byte	0
 1909 0026 00       		.byte	0
 1910 0027 00       		.byte	0
 1911 0028 00       		.byte	0
 1912 0029 01       		.byte	1
 1913 002a 00       		.byte	0
 1914 002b 01       		.byte	1
 1915 002c 00       		.byte	0
 1916 002d 01       		.byte	1
 1917 002e 00       		.byte	0
 1918 002f 00       		.byte	0
 1919 0030 02       		.byte	2
 1920 0031 00       		.byte	0
 1921 0032 00       		.byte	0
 1922 0033 01       		.byte	1
 1923 0034 00       		.byte	0
 1924 0035 00       		.byte	0
 1925 0036 01       		.byte	1
 1926 0037 00       		.byte	0
 1927 0038 00       		.byte	0
 1928 0039 00       		.byte	0
 1929 003a 00       		.byte	0
 1930 003b 02       		.byte	2
 1931 003c 00       		.byte	0
 1932 003d 00       		.byte	0
 1933 003e 00       		.byte	0
 1934 003f 02       		.byte	2
 1937              	t_2.3999:
 1938 0040 02       		.byte	2
 1939 0041 00       		.byte	0
 1940 0042 00       		.byte	0
 1941 0043 01       		.byte	1
 1942 0044 00       		.byte	0
 1943 0045 00       		.byte	0
 1944 0046 00       		.byte	0
 1945 0047 00       		.byte	0
 1946 0048 00       		.byte	0
 1947 0049 00       		.byte	0
 1948 004a 00       		.byte	0
 1949 004b 01       		.byte	1
 1950 004c 00       		.byte	0
 1951 004d 02       		.byte	2
 1952 004e 00       		.byte	0
 1953 004f 00       		.byte	0
 1954 0050 00       		.byte	0
 1955 0051 00       		.byte	0
 1956 0052 01       		.byte	1
 1957 0053 01       		.byte	1
 1958 0054 01       		.byte	1
 1959 0055 00       		.byte	0
 1960 0056 00       		.byte	0
 1961 0057 00       		.byte	0
 1962 0058 02       		.byte	2
 1963 0059 01       		.byte	1
 1964 005a 00       		.byte	0
 1965 005b 02       		.byte	2
 1966 005c 01       		.byte	1
 1967 005d 00       		.byte	0
 1968 005e 01       		.byte	1
 1969 005f 02       		.byte	2
 1970 0060 00       		.byte	0
 1971 0061 00       		.byte	0
 1972 0062 00       		.byte	0
 1973 0063 00       		.byte	0
 1974 0064 02       		.byte	2
 1975 0065 00       		.byte	0
 1976 0066 00       		.byte	0
 1977 0067 00       		.byte	0
 1978 0068 00       		.byte	0
 1979 0069 02       		.byte	2
 1980 006a 00       		.byte	0
 1981 006b 00       		.byte	0
 1982 006c 00       		.byte	0
 1983 006d 01       		.byte	1
 1984 006e 00       		.byte	0
 1985 006f 00       		.byte	0
 1986 0070 00       		.byte	0
 1987 0071 00       		.byte	0
 1988 0072 00       		.byte	0
 1989 0073 00       		.byte	0
 1990 0074 00       		.byte	0
 1991 0075 00       		.byte	0
 1992 0076 02       		.byte	2
 1993 0077 00       		.byte	0
 1994 0078 00       		.byte	0
 1995 0079 00       		.byte	0
 1996 007a 00       		.byte	0
 1997 007b 00       		.byte	0
 1998 007c 00       		.byte	0
 1999 007d 00       		.byte	0
 2000 007e 00       		.byte	0
 2001 007f 00       		.byte	0
 2004              	t_3.4000:
 2005 0080 02       		.byte	2
 2006 0081 01       		.byte	1
 2007 0082 01       		.byte	1
 2008 0083 01       		.byte	1
 2009 0084 01       		.byte	1
 2010 0085 01       		.byte	1
 2011 0086 01       		.byte	1
 2012 0087 01       		.byte	1
 2013 0088 01       		.byte	1
 2014 0089 01       		.byte	1
 2015 008a 00       		.byte	0
 2016 008b 00       		.byte	0
 2017 008c 00       		.byte	0
 2018 008d 00       		.byte	0
 2019 008e 00       		.byte	0
 2020 008f 00       		.byte	0
 2021 0090 01       		.byte	1
 2022 0091 00       		.byte	0
 2023 0092 01       		.byte	1
 2024 0093 00       		.byte	0
 2025 0094 00       		.byte	0
 2026 0095 00       		.byte	0
 2027 0096 00       		.byte	0
 2028 0097 00       		.byte	0
 2029 0098 01       		.byte	1
 2030 0099 00       		.byte	0
 2031 009a 00       		.byte	0
 2032 009b 01       		.byte	1
 2033 009c 00       		.byte	0
 2034 009d 00       		.byte	0
 2035 009e 00       		.byte	0
 2036 009f 00       		.byte	0
 2037 00a0 01       		.byte	1
 2038 00a1 00       		.byte	0
 2039 00a2 00       		.byte	0
 2040 00a3 00       		.byte	0
 2041 00a4 01       		.byte	1
 2042 00a5 00       		.byte	0
 2043 00a6 00       		.byte	0
 2044 00a7 00       		.byte	0
 2045 00a8 01       		.byte	1
 2046 00a9 00       		.byte	0
 2047 00aa 00       		.byte	0
 2048 00ab 00       		.byte	0
 2049 00ac 00       		.byte	0
 2050 00ad 01       		.byte	1
 2051 00ae 00       		.byte	0
 2052 00af 00       		.byte	0
 2053 00b0 01       		.byte	1
 2054 00b1 00       		.byte	0
 2055 00b2 00       		.byte	0
 2056 00b3 00       		.byte	0
 2057 00b4 00       		.byte	0
 2058 00b5 00       		.byte	0
 2059 00b6 01       		.byte	1
 2060 00b7 00       		.byte	0
 2061 00b8 02       		.byte	2
 2062 00b9 00       		.byte	0
 2063 00ba 00       		.byte	0
 2064 00bb 00       		.byte	0
 2065 00bc 00       		.byte	0
 2066 00bd 00       		.byte	0
 2067 00be 00       		.byte	0
 2068 00bf 02       		.byte	2
 2071              	t_t.4019:
 2072 00c0 00       		.byte	0
 2073 00c1 00       		.byte	0
 2074 00c2 00       		.byte	0
 2075 00c3 00       		.byte	0
 2076 00c4 00       		.byte	0
 2077 00c5 00       		.byte	0
 2078 00c6 00       		.byte	0
 2079 00c7 00       		.byte	0
 2080 00c8 00       		.byte	0
 2081 00c9 00       		.byte	0
 2082 00ca 00       		.byte	0
 2083 00cb 00       		.byte	0
 2084 00cc 00       		.byte	0
 2085 00cd 00       		.byte	0
 2086 00ce 00       		.byte	0
 2087 00cf 00       		.byte	0
 2088 00d0 00       		.byte	0
 2089 00d1 00       		.byte	0
 2090 00d2 00       		.byte	0
 2091 00d3 02       		.byte	2
 2092 00d4 00       		.byte	0
 2093 00d5 00       		.byte	0
 2094 00d6 00       		.byte	0
 2095 00d7 00       		.byte	0
 2096 00d8 00       		.byte	0
 2097 00d9 00       		.byte	0
 2098 00da 00       		.byte	0
 2099 00db 01       		.byte	1
 2100 00dc 02       		.byte	2
 2101 00dd 00       		.byte	0
 2102 00de 00       		.byte	0
 2103 00df 00       		.byte	0
 2104 00e0 00       		.byte	0
 2105 00e1 00       		.byte	0
 2106 00e2 00       		.byte	0
 2107 00e3 02       		.byte	2
 2108 00e4 01       		.byte	1
 2109 00e5 00       		.byte	0
 2110 00e6 00       		.byte	0
 2111 00e7 00       		.byte	0
 2112 00e8 00       		.byte	0
 2113 00e9 00       		.byte	0
 2114 00ea 00       		.byte	0
 2115 00eb 00       		.byte	0
 2116 00ec 00       		.byte	0
 2117 00ed 00       		.byte	0
 2118 00ee 00       		.byte	0
 2119 00ef 00       		.byte	0
 2120 00f0 00       		.byte	0
 2121 00f1 00       		.byte	0
 2122 00f2 00       		.byte	0
 2123 00f3 00       		.byte	0
 2124 00f4 00       		.byte	0
 2125 00f5 00       		.byte	0
 2126 00f6 00       		.byte	0
 2127 00f7 00       		.byte	0
 2128 00f8 00       		.byte	0
 2129 00f9 00       		.byte	0
 2130 00fa 00       		.byte	0
 2131 00fb 00       		.byte	0
 2132 00fc 00       		.byte	0
 2133 00fd 00       		.byte	0
 2134 00fe 00       		.byte	0
 2135 00ff 00       		.byte	0
 2136              		.text
 2137              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 pruebas_patron_volteo.c
C:\Users\sergi\AppData\Local\Temp\ccxjzcuC.s:989    .text:00000000 $a
C:\Users\sergi\AppData\Local\Temp\ccxjzcuC.s:992    .text:00000000 patron_volteo_test
C:\Users\sergi\AppData\Local\Temp\ccxjzcuC.s:1101   .text:000000c8 pruebas_patron_volteo
C:\Users\sergi\AppData\Local\Temp\ccxjzcuC.s:1405   .text:00000300 $d
C:\Users\sergi\AppData\Local\Temp\ccxjzcuC.s:1412   .text:00000310 $a
C:\Users\sergi\AppData\Local\Temp\ccxjzcuC.s:1415   .text:00000310 pruebas_tiempo_patron_volteo
C:\Users\sergi\AppData\Local\Temp\ccxjzcuC.s:1836   .text:00000744 $d
C:\Users\sergi\AppData\Local\Temp\ccxjzcuC.s:1841   .rodata:00000000 $d
C:\Users\sergi\AppData\Local\Temp\ccxjzcuC.s:1845   .rodata:00000000 vSF
C:\Users\sergi\AppData\Local\Temp\ccxjzcuC.s:1856   .rodata:00000008 vSC
C:\Users\sergi\AppData\Local\Temp\ccxjzcuC.s:1866   .data:00000000 $d
C:\Users\sergi\AppData\Local\Temp\ccxjzcuC.s:1870   .data:00000000 t_1.3998
C:\Users\sergi\AppData\Local\Temp\ccxjzcuC.s:1937   .data:00000040 t_2.3999
C:\Users\sergi\AppData\Local\Temp\ccxjzcuC.s:2004   .data:00000080 t_3.4000
C:\Users\sergi\AppData\Local\Temp\ccxjzcuC.s:2071   .data:000000c0 t_t.4019
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
patron_volteo
patron_volteo_arm_c
patron_volteo_arm_arm
timer2_inicializar
timer2_empezar
timer2_parar
