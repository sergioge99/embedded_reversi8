   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 18, 4
  11              		.file	"exception_lib.c"
  21              	.Ltext0:
  22              		.file 1 "../exception_lib.c"
 1890              		.align	2
 1891              		.global	Handler1
 1893              	Handler1:
 1894              	.LFB1:
   1:../exception_lib.c **** /*********************************************************************************************
   2:../exception_lib.c **** * Fichero:	exception_lib.c
   3:../exception_lib.c **** * Autor1:	Sergio García Esteban	755844
   4:../exception_lib.c **** * Autor2:	Irene Fumanal Lacoma	758325
   5:../exception_lib.c **** * Descrip:	Tratamiento de excepciones.
   6:../exception_lib.c **** * Version:
   7:../exception_lib.c **** *********************************************************************************************/
   8:../exception_lib.c **** 
   9:../exception_lib.c **** /*--- ficheros de cabecera ---*/
  10:../exception_lib.c **** #include "exception_lib.h"
  11:../exception_lib.c **** #include "44b.h"
  12:../exception_lib.c **** #include "44blib.h"
  13:../exception_lib.c **** #include "8led.h"
  14:../exception_lib.c **** 
  15:../exception_lib.c **** /*********************************************************************************************
  16:../exception_lib.c **** * Declaramos la ISR para los 3 tipos de excepcion.
  17:../exception_lib.c **** *********************************************************************************************/
  18:../exception_lib.c **** void Handler1() __attribute__((interrupt("SWI")))
  19:../exception_lib.c **** 				__attribute__((interrupt("UNDEF")))
  20:../exception_lib.c **** 				__attribute__((interrupt("ABORT")));
  21:../exception_lib.c **** 
  22:../exception_lib.c **** 
  23:../exception_lib.c **** /*--- codigo de las funciones ---*/
  24:../exception_lib.c **** 
  25:../exception_lib.c **** /*********************************************************************************************
  26:../exception_lib.c **** * Inicializacion, asigna la rutina Handler1() a las 3 excepciones.
  27:../exception_lib.c **** *********************************************************************************************/
  28:../exception_lib.c **** void exception_init(){
  29:../exception_lib.c **** 	pISR_SWI = (unsigned) Handler1;
  30:../exception_lib.c **** 	pISR_DABORT = (unsigned) Handler1;
  31:../exception_lib.c **** 	pISR_UNDEF = (unsigned) Handler1;
  32:../exception_lib.c **** }
  33:../exception_lib.c **** /*********************************************************************************************
  34:../exception_lib.c **** * Rutina de excepcion. Identifica el tipo de excepcion y la direccion donde es causada.
  35:../exception_lib.c **** * Muestra por el 8led: 1 si es SWI, 2 si es Data Abort y 3 si es Undefined.
  36:../exception_lib.c **** *********************************************************************************************/
  37:../exception_lib.c **** void Handler1()
  38:../exception_lib.c **** {
 1895              		.loc 1 38 0
 1896              		.cfi_startproc
 1897              		@ Interrupt Service Routine.
 1898              		@ args = 0, pretend = 0, frame = 0
 1899              		@ frame_needed = 1, uses_anonymous_args = 0
 1900              	.LVL0:
 1901 0000 04C02DE5 		str	ip, [sp, #-4]!
 1902 0004 0DC0A0E1 		mov	ip, sp
 1903              	.LCFI0:
 1904              		.cfi_def_cfa_register 12
 1905 0008 3FD82DE9 		stmfd	sp!, {r0, r1, r2, r3, r4, r5, fp, ip, lr, pc}
  39:../exception_lib.c **** 	int ExcepcionInterna=0;
  40:../exception_lib.c **** 	int instruccion=0;
  41:../exception_lib.c **** 	unsigned long cpsr;
  42:../exception_lib.c **** 
  43:../exception_lib.c **** 	asm("mrs %0, cpsr":"=r"(cpsr):);	// leemos cpsr
 1906              		.loc 1 43 0
 1907              	@ 43 "../exception_lib.c" 1
 1908 000c 00400FE1 		mrs r4, cpsr
 1909              	@ 0 "" 2
 1910              	.LVL1:
  44:../exception_lib.c **** 	cpsr=cpsr%32;	// nos quedamos con el valor de los ultimos 5 bits del cpsr (modo)
 1911              		.loc 1 44 0
 1912 0010 1F4004E2 		and	r4, r4, #31
 1913              		.cfi_offset 14, -8
 1914              		.cfi_offset 13, -12
 1915              		.cfi_offset 11, -16
 1916              		.cfi_offset 5, -20
 1917              		.cfi_offset 4, -24
 1918              		.cfi_offset 3, -28
 1919              		.cfi_offset 2, -32
 1920              		.cfi_offset 1, -36
 1921              		.cfi_offset 0, -40
 1922              	.LVL2:
  45:../exception_lib.c **** 
  46:../exception_lib.c **** 	if(cpsr==19){		// SWI
 1923              		.loc 1 46 0
 1924 0014 130054E3 		cmp	r4, #19
  38:../exception_lib.c **** {
 1925              		.loc 1 38 0
 1926 0018 04B04CE2 		sub	fp, ip, #4
 1927              	.LCFI1:
 1928              		.cfi_def_cfa 11, 4
  47:../exception_lib.c **** 		ExcepcionInterna=1;
 1929              		.loc 1 47 0
 1930 001c 0140A003 		moveq	r4, #1
 1931              	.LVL3:
  46:../exception_lib.c **** 	if(cpsr==19){		// SWI
 1932              		.loc 1 46 0
 1933 0020 0500000A 		beq	.L7
  48:../exception_lib.c **** 		asm("movs %0, r14":"=r"(instruccion):);
  49:../exception_lib.c **** 	}
  50:../exception_lib.c **** 	else if(cpsr==23){	// Data Abort
 1934              		.loc 1 50 0
 1935 0024 170054E3 		cmp	r4, #23
  51:../exception_lib.c **** 		ExcepcionInterna=2;
 1936              		.loc 1 51 0
 1937 0028 0240A003 		moveq	r4, #2
  50:../exception_lib.c **** 	else if(cpsr==23){	// Data Abort
 1938              		.loc 1 50 0
 1939 002c 0200000A 		beq	.L7
  52:../exception_lib.c **** 		asm("movs %0, r14":"=r"(instruccion):);
  53:../exception_lib.c **** 		instruccion-=8;			//offset direccion en Data Abort
  54:../exception_lib.c **** 	}
  55:../exception_lib.c **** 	else if(cpsr==27){	// Undefined
  56:../exception_lib.c **** 		ExcepcionInterna=3;
 1940              		.loc 1 56 0
 1941 0030 1B0054E3 		cmp	r4, #27
 1942 0034 0340A003 		moveq	r4, #3
 1943 0038 0040A013 		movne	r4, #0
 1944              	.LVL4:
 1945              	.L7:
  57:../exception_lib.c **** 		asm("movs %0, r14":"=r"(instruccion):);
  58:../exception_lib.c **** 	}
  59:../exception_lib.c **** 
  60:../exception_lib.c **** 
  61:../exception_lib.c **** 	while(1){	//8led parpadea numero de excepcion
  62:../exception_lib.c **** 		D8Led_symbol(ExcepcionInterna);
 1946              		.loc 1 62 0 discriminator 1
 1947 003c 0400A0E1 		mov	r0, r4
 1948 0040 FEFFFFEB 		bl	D8Led_symbol
  63:../exception_lib.c **** 		Delay(500);
 1949              		.loc 1 63 0 discriminator 1
 1950 0044 7D0FA0E3 		mov	r0, #500
 1951 0048 FEFFFFEB 		bl	Delay
  64:../exception_lib.c **** 		D8Led_symbol(16);
 1952              		.loc 1 64 0 discriminator 1
 1953 004c 1000A0E3 		mov	r0, #16
 1954 0050 FEFFFFEB 		bl	D8Led_symbol
  65:../exception_lib.c **** 		Delay(500);
 1955              		.loc 1 65 0 discriminator 1
 1956 0054 7D0FA0E3 		mov	r0, #500
 1957 0058 FEFFFFEB 		bl	Delay
 1958 005c F6FFFFEA 		b	.L7
 1959              		.cfi_endproc
 1960              	.LFE1:
 1962              		.align	2
 1963              		.global	exception_init
 1965              	exception_init:
 1966              	.LFB0:
  28:../exception_lib.c **** void exception_init(){
 1967              		.loc 1 28 0
 1968              		.cfi_startproc
 1969              		@ Function supports interworking.
 1970              		@ args = 0, pretend = 0, frame = 0
 1971              		@ frame_needed = 0, uses_anonymous_args = 0
 1972              		@ link register save eliminated.
  29:../exception_lib.c **** 	pISR_SWI = (unsigned) Handler1;
 1973              		.loc 1 29 0
 1974 0060 10209FE5 		ldr	r2, .L10
 1975 0064 10309FE5 		ldr	r3, .L10+4
 1976 0068 F72003E5 		str	r2, [r3, #-247]
  30:../exception_lib.c **** 	pISR_DABORT = (unsigned) Handler1;
 1977              		.loc 1 30 0
 1978 006c EF2003E5 		str	r2, [r3, #-239]
  31:../exception_lib.c **** 	pISR_UNDEF = (unsigned) Handler1;
 1979              		.loc 1 31 0
 1980 0070 FB2003E5 		str	r2, [r3, #-251]
  32:../exception_lib.c **** }
 1981              		.loc 1 32 0
 1982 0074 1EFF2FE1 		bx	lr
 1983              	.L11:
 1984              		.align	2
 1985              	.L10:
 1986 0078 00000000 		.word	Handler1
 1987 007c FFFF7F0C 		.word	209715199
 1988              		.cfi_endproc
 1989              	.LFE0:
 1991              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 exception_lib.c
C:\Users\sergi\AppData\Local\Temp\cc79dSRo.s:1890   .text:00000000 $a
C:\Users\sergi\AppData\Local\Temp\cc79dSRo.s:1893   .text:00000000 Handler1
C:\Users\sergi\AppData\Local\Temp\cc79dSRo.s:1965   .text:00000060 exception_init
C:\Users\sergi\AppData\Local\Temp\cc79dSRo.s:1986   .text:00000078 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
D8Led_symbol
Delay
